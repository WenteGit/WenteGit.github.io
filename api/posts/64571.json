{"title":"Cloud_Hystrix","slug":"Cloud_Hystrix","date":"2022-07-24","updated":"2022-07-25","comments":true,"path":"api/posts/64571.json","excerpt":"<blockquote><p>Hystrix 属于服务降级部分，这里将会详细介绍关于 Hystrix 的相关知识 </p></blockquote>","cover":null,"covers":null,"content":"<blockquote>\n<p>Hystrix 属于服务降级部分，这里将会详细介绍关于 Hystrix 的相关知识</p>\n</blockquote>\n<span id=\"more\"></span>\n<h1 id=\"Hystrix 介绍\"><a href=\"#Hystrix 介绍\" class=\"headerlink\" title=\"Hystrix 介绍\"></a>Hystrix 介绍</h1><blockquote>\n<p>Hystrix 是一个用于处理分布式系统的延迟和容错的开源库，在分布式系统里，许多依赖不可避免的会调用失败，比如超时、异常等。<br>Hystrix 能够保证在一个依赖出问题的情况下，不会导致整体服务失败，避免级联故障，以提高分布式系统的弹性。  </p>\n<hr>\n<p>“断路器”本身是一种开关装置，当某个服务单元发生故障之后，通过断路器的故障监控 (类似熔断保险丝)，向调用方返回—个符合预期的、可处理的备选响应(FallBack)。<br> 而不是长时间的等待或者抛出调用方无法处理的异常，这样就保证了服务调用方的线程不会被长时间、不必要地占用，从而避免了故障在分布式系统中的蔓延，乃至雪崩。</p>\n</blockquote>\n<h1 id=\"Hystrix 核心\"><a href=\"#Hystrix 核心\" class=\"headerlink\" title=\"Hystrix 核心\"></a>Hystrix 核心</h1><blockquote>\n<ul>\n<li>服务降级</li>\n<li>服务熔断</li>\n<li>接近实时的监控</li>\n</ul>\n</blockquote>\n<h1 id=\"依赖导入\"><a href=\"# 依赖导入\" class=\"headerlink\" title=\"依赖导入\"></a>依赖导入</h1><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework.cloud<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-cloud-starter-netflix-hystrix<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<blockquote>\n<hr>\n</blockquote>\n<h1 id=\"服务降级—————\"><a href=\"# 服务降级—————\" class=\"headerlink\" title=\"服务降级—————-\"></a>服务降级—————-</h1><h1 id=\"服务提供端 8001 设置 fallbcakMethod 兜底\"><a href=\"# 服务提供端 8001 设置 fallbcakMethod 兜底\" class=\"headerlink\" title=\"服务提供端 8001 设置 fallbcakMethod 兜底\"></a>服务提供端 8001 设置 fallbcakMethod 兜底</h1><blockquote>\n<hr>\n<p>主启动类添加注解，开启断路器功能</p>\n</blockquote>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@EnableCircuitBreaker</span></span><br></pre></td></tr></table></figure>\n<blockquote>\n<hr>\n<p>解释：  </p>\n<ul>\n<li>业务层添加。如果 paymentInfo_TimeOut()在规定的 3s 内执行失败，则立即访问         &gt;paymentInfo_TimeOutHandler()方法作为 fallbackMethod 方法  </li>\n<li>只要是当前服务不可用了，马上做服务降级</li>\n<li>如果是在服务端配置的服务降级，不能通过 80 端口回调，只能自测</li>\n</ul>\n</blockquote>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@HystrixCommand(fallbackMethod = &quot;paymentInfo_TimeOutHandler&quot;,</span></span><br><span class=\"line\"><span class=\"meta\">commandProperties = &#123;</span></span><br><span class=\"line\"><span class=\"meta\">    @HystrixProperty(name=&quot;execution.isolation.thread.timeoutInMilliseconds&quot;,value=&quot;3000&quot;)&#125;)</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> String <span class=\"title function_\">paymentInfo_TimeOut</span><span class=\"params\">(Integer id)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">try</span> &#123; TimeUnit.SECONDS.sleep(<span class=\"number\">5</span>); &#125; <span class=\"keyword\">catch</span> (InterruptedException e) &#123; e.printStackTrace(); &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"string\">&quot; 线程池:  &quot;</span>+Thread.currentThread().getName()+<span class=\"string\">&quot; id:  &quot;</span>+id+<span class=\"string\">&quot;\\t&quot;</span>+<span class=\"string\">&quot;O(∩_∩)O 哈哈~&quot;</span>+<span class=\"string\">&quot;  耗时(秒): 5&quot;</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> String <span class=\"title function_\">paymentInfo_TimeOutHandler</span><span class=\"params\">(Integer id)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"string\">&quot; 线程池:  &quot;</span>+Thread.currentThread().getName()+<span class=\"string\">&quot;  8001 系统繁忙或者运行报错，请稍后再试,id:  &quot;</span>+id+<span class=\"string\">&quot;\\t&quot;</span>+<span class=\"string\">&quot;o(╥﹏╥)o&quot;</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h1 id=\"客户端 80 设置 fallbackMethod\"><a href=\"# 客户端 80 设置 fallbackMethod\" class=\"headerlink\" title=\"客户端 80 设置 fallbackMethod\"></a>客户端 80 设置 fallbackMethod</h1><blockquote>\n<p>主启动类添加注解 <br> 其中 @EnableHystrix 中也包含了 @EnableCircuitBreaker</p>\n</blockquote>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@EnableHystrix</span></span><br></pre></td></tr></table></figure>\n<blockquote>\n<hr>\n<p>客户端 yml 中的配置  </p>\n</blockquote>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">feign:</span></span><br><span class=\"line\">  <span class=\"attr\">hystrix:</span></span><br><span class=\"line\">  <span class=\"comment\"># 如果处理自身的容错就开启。开启方式与生产端不一样。</span></span><br><span class=\"line\">    <span class=\"attr\">enabled:</span> <span class=\"literal\">true</span> </span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>通用 fallback 方法 :<br>若单个方法有具体指明 fallback 方法，则使用其具体的方法</p>\n</blockquote>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// hystrix 全局 fallback 方法标注在 Controller 的类头</span></span><br><span class=\"line\"><span class=\"meta\">@DefaultProperties(defaultFallback = &quot;payment_Global_FallbackMethod&quot;)</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">OrderFeignController</span>&#123;&#125;</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"客户端 80 解决代码冗余和膨胀\"><a href=\"# 客户端 80 解决代码冗余和膨胀\" class=\"headerlink\" title=\"客户端 80 解决代码冗余和膨胀\"></a>客户端 80 解决代码冗余和膨胀</h1><blockquote>\n<p>这样写的话，就不需要在 Controller 层进行指定了 <br> 这样写的优先级仍然大于 DefaultProperties 的优先级</p>\n</blockquote>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 在 service 层的注解添加 fallback</span></span><br><span class=\"line\"><span class=\"meta\">@FeignClient(value = &quot;cloud-provider-hystrix-payment&quot;,fallback = PaymentFallbackServiceImpl.class)</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 书写 service 层的实现类</span></span><br><span class=\"line\"><span class=\"meta\">@Component</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">PaymentFallbackServiceImpl</span> <span class=\"keyword\">implements</span> <span class=\"title class_\">PaymentFeignService</span> &#123;&#125;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<hr>\n</blockquote>\n<h1 id=\"服务熔断———————————–\"><a href=\"# 服务熔断———————————–\" class=\"headerlink\" title=\"服务熔断———————————–\"></a>服务熔断———————————–</h1><blockquote>\n<h2 id=\"核心\"><a href=\"# 核心\" class=\"headerlink\" title=\"核心\"></a>核心</h2><ul>\n<li>服务降级–熔断–慢慢恢复调用电路  </li>\n</ul>\n<hr>\n</blockquote>\n<blockquote>\n<h1 id=\"服务端\"><a href=\"# 服务端\" class=\"headerlink\" title=\"服务端\"></a>服务端</h1><h2 id=\"Controller 层\"><a href=\"#Controller 层\" class=\"headerlink\" title=\"Controller 层\"></a>Controller 层</h2></blockquote>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//==== 服务熔断</span></span><br><span class=\"line\">  <span class=\"meta\">@GetMapping(&quot;/payment/circuit/&#123;id&#125;&quot;)</span></span><br><span class=\"line\">  <span class=\"keyword\">public</span> String <span class=\"title function_\">paymentCircuitBreaker</span><span class=\"params\">(<span class=\"meta\">@PathVariable(&quot;id&quot;)</span> Integer id)</span></span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">      <span class=\"type\">String</span> <span class=\"variable\">result</span> <span class=\"operator\">=</span> paymentService.paymentCircuitBreaker(id);</span><br><span class=\"line\">      log.info(<span class=\"string\">&quot;****result: &quot;</span>+result);</span><br><span class=\"line\">      <span class=\"keyword\">return</span> result;</span><br><span class=\"line\">  &#125;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<h2 id=\"Serice 层\"><a href=\"#Serice 层\" class=\"headerlink\" title=\"Serice 层\"></a>Serice 层</h2></blockquote>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//===== 服务熔断</span></span><br><span class=\"line\">   <span class=\"meta\">@HystrixCommand(fallbackMethod = &quot;paymentCircuitBreaker_fallback&quot;,commandProperties = &#123;</span></span><br><span class=\"line\"><span class=\"meta\">           @HystrixProperty(name = &quot;circuitBreaker.enabled&quot;,value = &quot;true&quot;),// 是否开启断路器</span></span><br><span class=\"line\"><span class=\"meta\">           @HystrixProperty(name = &quot;circuitBreaker.requestVolumeThreshold&quot;,value = &quot;10&quot;),// 请求次数</span></span><br><span class=\"line\"><span class=\"meta\">           @HystrixProperty(name = &quot;circuitBreaker.sleepWindowInMilliseconds&quot;,value = &quot;10000&quot;), // 时间窗口期</span></span><br><span class=\"line\"><span class=\"meta\">           @HystrixProperty(name = &quot;circuitBreaker.errorThresholdPercentage&quot;,value = &quot;60&quot;),// 失败率达到多少后跳闸</span></span><br><span class=\"line\"><span class=\"meta\">   &#125;)</span></span><br><span class=\"line\">   <span class=\"keyword\">public</span> String <span class=\"title function_\">paymentCircuitBreaker</span><span class=\"params\">(<span class=\"meta\">@PathVariable(&quot;id&quot;)</span> Integer id)</span></span><br><span class=\"line\">   &#123;</span><br><span class=\"line\">       <span class=\"keyword\">if</span>(id &lt; <span class=\"number\">0</span>)</span><br><span class=\"line\">       &#123;</span><br><span class=\"line\">           <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"title class_\">RuntimeException</span>(<span class=\"string\">&quot;******id 不能负数 &quot;</span>);</span><br><span class=\"line\">       &#125;</span><br><span class=\"line\">       <span class=\"comment\">// 使用工具包生成流水号</span></span><br><span class=\"line\">       <span class=\"type\">String</span> <span class=\"variable\">serialNumber</span> <span class=\"operator\">=</span> IdUtil.simpleUUID();</span><br><span class=\"line\"></span><br><span class=\"line\">       <span class=\"keyword\">return</span> Thread.currentThread().getName()+<span class=\"string\">&quot;\\t&quot;</span>+<span class=\"string\">&quot; 调用成功，流水号: &quot;</span> + serialNumber;</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">   <span class=\"keyword\">public</span> String <span class=\"title function_\">paymentCircuitBreaker_fallback</span><span class=\"params\">(<span class=\"meta\">@PathVariable(&quot;id&quot;)</span> Integer id)</span></span><br><span class=\"line\">   &#123;</span><br><span class=\"line\">       <span class=\"keyword\">return</span> <span class=\"string\">&quot;id 不能负数，请稍后再试，/(ㄒ o ㄒ)/~~   id: &quot;</span> +id;</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>","url":"/posts/64571/","min2read":4,"word4post":953,"prev_post":{"title":"JavaUtils","url":"/posts/13372/"},"next_post":{"title":"Cloud_OpenFeign","url":"/posts/40393/"},"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" data-id=\"Hystrix 介绍\" href = \"#\"><span class=\"toc-number\">1.</span> <span class=\"toc-text\">Hystrix 介绍</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" data-id=\"Hystrix 核心\" href = \"#\"><span class=\"toc-number\">2.</span> <span class=\"toc-text\">Hystrix 核心</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" data-id=\"依赖导入\" href = \"#\"><span class=\"toc-number\">3.</span> <span class=\"toc-text\">依赖导入</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" data-id=\"服务降级—————\" href = \"#\"><span class=\"toc-number\">4.</span> <span class=\"toc-text\">服务降级—————-</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" data-id=\"服务提供端 8001 设置 fallbcakMethod 兜底\" href = \"#\"><span class=\"toc-number\">5.</span> <span class=\"toc-text\">服务提供端 8001 设置 fallbcakMethod 兜底</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" data-id=\"客户端 80 设置 fallbackMethod\" href = \"#\"><span class=\"toc-number\">6.</span> <span class=\"toc-text\">客户端 80 设置 fallbackMethod</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" data-id=\"客户端 80 解决代码冗余和膨胀\" href = \"#\"><span class=\"toc-number\">7.</span> <span class=\"toc-text\">客户端 80 解决代码冗余和膨胀</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" data-id=\"服务熔断———————————–\" href = \"#\"><span class=\"toc-number\">8.</span> <span class=\"toc-text\">服务熔断———————————–</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" data-id=\"核心\" href = \"#\"><span class=\"toc-number\">8.1.</span> <span class=\"toc-text\">核心</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" data-id=\"服务端\" href = \"#\"><span class=\"toc-number\">9.</span> <span class=\"toc-text\">服务端</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" data-id=\"Controller 层\" href = \"#\"><span class=\"toc-number\">9.1.</span> <span class=\"toc-text\">Controller 层</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" data-id=\"Serice 层\" href = \"#\"><span class=\"toc-number\">9.2.</span> <span class=\"toc-text\">Serice 层</span></a></li></ol></li></ol>","categories":[{"name":"Service_degradation","path":"api/categories/Service_degradation.json","url":"/categories/Service-degradation/"}],"tags":[{"name":"Hystrix","path":"api/tags/Hystrix.json","url":"/tags/Hystrix/"}]}