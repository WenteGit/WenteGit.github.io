{"title":"C-Process-API","slug":"C-Process-API","date":"2022-11-14","updated":"2022-11-14","comments":true,"path":"api/posts/5.json","excerpt":"<blockquote><p> 总结了关于 C 语言对进程控制的一些语句 </p></blockquote>","cover":null,"covers":null,"content":"<blockquote>\n<p>总结了关于 C 语言对进程控制的一些语句</p>\n</blockquote>\n<span id=\"more\"></span>\n<h1 id=\"进程标识\"><a href=\"# 进程标识\" class=\"headerlink\" title=\"进程标识\"></a>进程标识</h1><ul>\n<li>getpid 函数：获取调用该函数进程的进程 ID。    </li>\n<li>getppid 函数：获取调用该函数进程的父进程 ID。  </li>\n<li>getuid 函数：获取调用该函数进程的实际用户 ID，一般在没有调用 setuid 函数（此 <br> 数不讲）进行修改进程对应的程序文件所属用户的情况下，该用户 ID 就等于当初运行 <br> 该程序时的用户 ID。  </li>\n<li>geteuid 函数：获取调用该函数进程的有效用户 ID，一般在没有调用 seteuid 函数进行修 <br> 改前，该用户 ID 就等于当初的运行该程序时的有效用户 ID。  </li>\n<li>getgid 函数：获取调用该函数进程的实际组 ID，一般在没有调用 setgid 函数进行修改 <br> 前，该用户组 ID 就等于当初运行该程序时的组 ID。  </li>\n<li>getegid 函数：获取调用该函数进程的有效组 ID，一般在没有调用 setegid 函数进行修改 前，该用户 ID 就等于当初运行该程序时的有效组 ID。<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;sys/types.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;unistd.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">main</span><span class=\"params\">(<span class=\"type\">void</span>)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">        <span class=\"comment\">// 执行当前函数的进程 ID</span></span><br><span class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;pid  = %d\\n&quot;</span>, getpid());</span><br><span class=\"line\">        <span class=\"comment\">// 调用该函数的父进程 ID</span></span><br><span class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;ppid = %d\\n\\n&quot;</span>, getppid());</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// 调用该函数的实际用户 ID</span></span><br><span class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;uid  = %d\\n&quot;</span>, getuid());</span><br><span class=\"line\">        <span class=\"comment\">// 调用该函数的有效用户 ID</span></span><br><span class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;euid = %d\\n\\n&quot;</span>, geteuid());</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// 调用该函数的实际组 ID</span></span><br><span class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;gid  = %d\\n&quot;</span>, getgid());</span><br><span class=\"line\">        <span class=\"comment\">// 调用该函数的有效组 ID</span></span><br><span class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;egid = %d\\n&quot;</span>, getegid());</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure></li>\n</ul>\n","url":"/posts/5/","min2read":1,"word4post":415,"prev_post":null,"next_post":{"title":"C_open_write","url":"/posts/22783/"},"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" data-id=\"进程标识\" href = \"#\"><span class=\"toc-number\">1.</span> <span class=\"toc-text\">进程标识</span></a></li></ol>","categories":[{"name":"C","path":"api/categories/C.json","url":"/categories/C/"}],"tags":[{"name":"Process","path":"api/tags/Process.json","url":"/tags/Process/"}]}