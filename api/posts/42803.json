{"title":"Golang-Grammar","slug":"Golang-Grammar","date":"2024-01-15","updated":"2024-01-19","comments":true,"path":"api/posts/42803.json","excerpt":"<blockquote><p> 关于 Golang 的语法学习 </p></blockquote>","cover":null,"covers":null,"content":"<blockquote>\n<p>关于 Golang 的语法学习</p>\n</blockquote>\n<span id=\"more\"></span>\n<h1 id=\"类型区分\"><a href=\"# 类型区分\" class=\"headerlink\" title=\"类型区分\"></a>类型区分 </h1><h2 id=\"值类型传递\"><a href=\"# 值类型传递\" class=\"headerlink\" title=\"值类型传递\"></a> 值类型传递</h2><blockquote>\n<p>概念：每次返回或拿到的都是一个新的值，修改新值不会影响到原值  </p>\n<ul>\n<li>int</li>\n<li>float</li>\n<li>string</li>\n<li>bool</li>\n<li>array</li>\n</ul>\n</blockquote>\n<h2 id=\"引用类型传递\"><a href=\"# 引用类型传递\" class=\"headerlink\" title=\"引用类型传递\"></a>引用类型传递</h2><blockquote>\n<p>概念：每次返回或拿到的都是指向原对象的内存地址的引用  </p>\n<ul>\n<li>slice</li>\n<li>map</li>\n<li>chan</li>\n</ul>\n</blockquote>\n<h1 id=\"变量与常量\"><a href=\"# 变量与常量\" class=\"headerlink\" title=\"变量与常量\"></a>变量与常量 </h1><h2 id=\"变量\"><a href=\"# 变量\" class=\"headerlink\" title=\"变量\"></a> 变量</h2><figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 定义变量后赋值，如果没有赋值，默认为 0，字符串的话默认为空串，数组的话默认为空数组。浮点值的默认也是 0</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> num1 <span class=\"type\">int</span></span><br><span class=\"line\">num1 = <span class=\"number\">10</span></span><br><span class=\"line\"><span class=\"comment\">// 直接写</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> num2 <span class=\"type\">int</span> = <span class=\"number\">20</span></span><br><span class=\"line\"><span class=\"comment\">// 类型推断，定义完成之后类型就确定好了</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> num3 = <span class=\"number\">30</span></span><br><span class=\"line\"><span class=\"comment\">// 简短声明，左侧变量至少得有一个是新的变量, 且不能定义全局变量</span></span><br><span class=\"line\">num4 := <span class=\"number\">40</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"常量\"><a href=\"# 常量\" class=\"headerlink\" title=\"常量\"></a>常量</h2><blockquote>\n<p>常量组</p>\n</blockquote>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> (</span><br><span class=\"line\">\tUnknown = <span class=\"number\">0</span></span><br><span class=\"line\">\tFemale = <span class=\"number\">1</span></span><br><span class=\"line\">\tMale = <span class=\"number\">2</span></span><br><span class=\"line\">)</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>iota 默认为 0，表示 const 中定义的常量个数</p>\n</blockquote>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> (</span><br><span class=\"line\">\ta = <span class=\"literal\">iota</span></span><br><span class=\"line\">\tb = <span class=\"literal\">iota</span></span><br><span class=\"line\">\tc = <span class=\"literal\">iota</span></span><br><span class=\"line\">)</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>如果常量没有指定值，默认为上一行的值</p>\n</blockquote>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">  <span class=\"keyword\">const</span> (</span><br><span class=\"line\">a = <span class=\"literal\">iota</span>   <span class=\"comment\">//0</span></span><br><span class=\"line\">b          <span class=\"comment\">//1</span></span><br><span class=\"line\">c          <span class=\"comment\">//2</span></span><br><span class=\"line\">d = <span class=\"string\">&quot;ha&quot;</span>   <span class=\"comment\">// 独立值，iota += 1</span></span><br><span class=\"line\">e          <span class=\"comment\">//&quot;ha&quot;   iota += 1</span></span><br><span class=\"line\">f = <span class=\"number\">100</span>    <span class=\"comment\">//iota +=1</span></span><br><span class=\"line\">g          <span class=\"comment\">//100  iota +=1</span></span><br><span class=\"line\">h = <span class=\"literal\">iota</span>   <span class=\"comment\">//7, 恢复计数</span></span><br><span class=\"line\">i          <span class=\"comment\">//8</span></span><br><span class=\"line\">  )</span><br></pre></td></tr></table></figure>\n\n\n<h1 id=\"运算\"><a href=\"# 运算\" class=\"headerlink\" title=\"运算\"></a>运算 </h1><h2 id=\"按位运算\"><a href=\"# 按位运算\" class=\"headerlink\" title=\"按位运算\"></a> 按位运算</h2><ul>\n<li>按位与：&amp;，二元运算，全为 1 则为 1，其他都为 0</li>\n<li>按位或：|，二元运算，同位有 1 则为 1，全 0 则为 0</li>\n<li>异或运算：<ul>\n<li>^，二元运算，相同则为 0，不同则为 1</li>\n<li>^，一元运算，包括符号位在内，取反</li>\n</ul>\n</li>\n<li>移位运算<ul>\n<li>a &lt;&lt; 2，向左移 2 位，最低位补 0</li>\n<li>a &gt;&gt;2，a 向右移 2 位，最高位补符号位</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"运算符优先级（从上到下）\"><a href=\"# 运算符优先级（从上到下）\" class=\"headerlink\" title=\"运算符优先级（从上到下）\"></a>运算符优先级（从上到下）</h2><ul>\n<li>~、!、++、– </li>\n<li>*、/、%、&lt;&lt;、&gt;&gt;、&amp;</li>\n<li>+、-、^</li>\n<li>==、!=、&lt;、&lt;=、&gt;=、&gt;</li>\n<li>&lt;-</li>\n<li>&amp;&amp;</li>\n<li>||</li>\n</ul>\n<h1 id=\"输入输出\"><a href=\"# 输入输出\" class=\"headerlink\" title=\"输入输出\"></a>输入输出 </h1><h2 id=\"占位符\"><a href=\"# 占位符\" class=\"headerlink\" title=\"占位符\"></a> 占位符</h2><ul>\n<li>%v，原样打出</li>\n<li>%T，打印类型</li>\n<li>%t，bool 类型</li>\n<li>%s，字符串类型</li>\n<li>%f，浮点数类型</li>\n<li>%d，十进制整数类型</li>\n<li>%b，二进制整数类型</li>\n<li>%o，八进制整数类型</li>\n<li>%x，十六进制整数类型<ul>\n<li>%x：0-9，a-f</li>\n<li>%X: 0-9，A-F</li>\n</ul>\n</li>\n<li>%c，字符类型</li>\n<li>%p，指针目标对象的内存地址 <h2 id=\"输入输出样式\"><a href=\"# 输入输出样式\" class=\"headerlink\" title=\"输入输出样式\"></a> 输入输出样式</h2><figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> x <span class=\"type\">int</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> y <span class=\"type\">float64</span></span><br><span class=\"line\"><span class=\"comment\">// 读取键盘的输入，通过操作地址，赋值给 x 和 y   阻塞式</span></span><br><span class=\"line\">fmt.Scanln(&amp;x,&amp;y)</span><br><span class=\"line\">fmt.Printf(<span class=\"string\">&quot;x 的数值：%d，y 的数值：%f\\n&quot;</span>,x,y)</span><br><span class=\"line\">fmt.Scanf(<span class=\"string\">&quot;%d,%f&quot;</span>,&amp;x,&amp;y)</span><br><span class=\"line\"><span class=\"comment\">// 输出到终端</span></span><br><span class=\"line\">fmt.Printf(<span class=\"string\">&quot;x:%d,y:%f\\n&quot;</span>,x,y)</span><br></pre></td></tr></table></figure></li>\n</ul>\n<h1 id=\"逻辑语句\"><a href=\"# 逻辑语句\" class=\"headerlink\" title=\"逻辑语句\"></a>逻辑语句</h1><h2 id=\"IF 语句\"><a href=\"#IF 语句\" class=\"headerlink\" title=\"IF 语句\"></a>IF 语句</h2><blockquote>\n<p>含初始化语句</p>\n</blockquote>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// num 只在 if 内可以用到，出了 if 则用不到</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> num := <span class=\"number\">4</span>;num&gt;<span class=\"number\">0</span>&#123;</span><br><span class=\"line\">\tfmt.Println(<span class=\"string\">&quot; 正数 &quot;</span>,num)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">else</span> <span class=\"keyword\">if</span> num ==<span class=\"number\">0</span>&#123;</span><br><span class=\"line\">\tfmt.Println(<span class=\"string\">&quot; 为零 &quot;</span>,num)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>不含初始化语句</p>\n</blockquote>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">num := <span class=\"number\">1</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> num&gt;<span class=\"number\">0</span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">else</span> <span class=\"keyword\">if</span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"switch 语句\"><a href=\"#switch 语句\" class=\"headerlink\" title=\"switch 语句\"></a>switch 语句</h2><blockquote>\n<p>标准写法</p>\n</blockquote>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">switch</span> num1 &#123;</span><br><span class=\"line\"><span class=\"keyword\">case</span> <span class=\"number\">1</span>:</span><br><span class=\"line\">\tfmt.Println(<span class=\"string\">&quot;num1 是 1&quot;</span>)</span><br><span class=\"line\">\t<span class=\"keyword\">break</span></span><br><span class=\"line\"><span class=\"keyword\">case</span> <span class=\"number\">2</span>:</span><br><span class=\"line\">\t<span class=\"keyword\">break</span></span><br><span class=\"line\"><span class=\"keyword\">case</span> <span class=\"number\">3</span>:</span><br><span class=\"line\">\t<span class=\"keyword\">break</span></span><br><span class=\"line\"><span class=\"keyword\">default</span>:</span><br><span class=\"line\">\t<span class=\"keyword\">break</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>省略 switch 后的变量，默认是布尔值</p>\n</blockquote>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">switch</span> &#123;</span><br><span class=\"line\"><span class=\"keyword\">case</span> <span class=\"literal\">true</span>:</span><br><span class=\"line\">\t<span class=\"keyword\">break</span></span><br><span class=\"line\"><span class=\"keyword\">case</span> <span class=\"literal\">false</span>:</span><br><span class=\"line\">\t<span class=\"keyword\">break</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>case 匹配多个</p>\n</blockquote>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> letter = <span class=\"string\">&quot;B&quot;</span></span><br><span class=\"line\"><span class=\"keyword\">switch</span> letter &#123;</span><br><span class=\"line\"><span class=\"keyword\">case</span> <span class=\"string\">&quot;A&quot;</span>, <span class=\"string\">&quot;E&quot;</span>, <span class=\"string\">&quot;I&quot;</span>, <span class=\"string\">&quot;O&quot;</span>, <span class=\"string\">&quot;U&quot;</span>:</span><br><span class=\"line\">\tfmt.Println(<span class=\"string\">&quot; 该字母是元音 &quot;</span>)</span><br><span class=\"line\">\t<span class=\"keyword\">break</span></span><br><span class=\"line\"><span class=\"keyword\">default</span>:</span><br><span class=\"line\">\tfmt.Println(<span class=\"string\">&quot; 该字母不是元音 &quot;</span>)</span><br><span class=\"line\">\t<span class=\"keyword\">break</span></span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>初始化语句</p>\n</blockquote>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">switch</span> letter := <span class=\"string\">&quot;A&quot;</span>;letter &#123;</span><br><span class=\"line\"><span class=\"keyword\">case</span> <span class=\"string\">&quot;A&quot;</span>, <span class=\"string\">&quot;E&quot;</span>, <span class=\"string\">&quot;I&quot;</span>, <span class=\"string\">&quot;O&quot;</span>, <span class=\"string\">&quot;U&quot;</span>:</span><br><span class=\"line\">\tfmt.Println(<span class=\"string\">&quot; 该字母是元音 &quot;</span>)</span><br><span class=\"line\">\t<span class=\"keyword\">break</span></span><br><span class=\"line\"><span class=\"keyword\">default</span>:</span><br><span class=\"line\">\tfmt.Println(<span class=\"string\">&quot; 该字母不是元音 &quot;</span>)</span><br><span class=\"line\">\t<span class=\"keyword\">break</span></span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>贯通后续的 case</p>\n</blockquote>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">switch</span> a := <span class=\"number\">1</span>; a &#123;</span><br><span class=\"line\"><span class=\"keyword\">case</span> <span class=\"number\">1</span>:</span><br><span class=\"line\">\tfmt.Println(<span class=\"string\">&quot;a=1&quot;</span>)</span><br><span class=\"line\">\t<span class=\"keyword\">fallthrough</span></span><br><span class=\"line\"><span class=\"keyword\">case</span> <span class=\"number\">2</span>:</span><br><span class=\"line\">\tfmt.Println(<span class=\"string\">&quot; 执行了贯穿 &quot;</span>)</span><br><span class=\"line\"><span class=\"keyword\">case</span> <span class=\"number\">3</span>:</span><br><span class=\"line\">\tfmt.Println(<span class=\"string\">&quot; 如果 case2 中也有 fallthrough，该语句也会被执行 &quot;</span>)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"循环语句\"><a href=\"# 循环语句\" class=\"headerlink\" title=\"循环语句\"></a>循环语句</h2><h3 id=\"for 循环\"><a href=\"#for 循环\" class=\"headerlink\" title=\"for 循环\"></a>for 循环</h3><blockquote>\n<p>标准写法</p>\n</blockquote>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">main</span><span class=\"params\">()</span></span> &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> i := <span class=\"number\">1</span>;i&lt;=<span class=\"number\">5</span>;i++&#123;</span><br><span class=\"line\">\t\tfmt.Println(<span class=\"string\">&quot;Hello World&quot;</span>)</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>省略分号，模拟 while 循环</p>\n</blockquote>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span> &#123;</span><br><span class=\"line\">\tfmt.Println(<span class=\"string\">&quot;Hello World&quot;</span>)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// 或者如下</span></span><br><span class=\"line\">i := <span class=\"number\">1</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> i &lt; <span class=\"number\">3</span> &#123;</span><br><span class=\"line\">\tfmt.Println(<span class=\"string\">&quot;Hello World&quot;</span>)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"跳转语句\"><a href=\"# 跳转语句\" class=\"headerlink\" title=\"跳转语句\"></a>跳转语句</h2><h3 id=\"goto 语句\"><a href=\"#goto 语句\" class=\"headerlink\" title=\"goto 语句\"></a>goto 语句</h3><blockquote>\n<p>指直接跳转到指定的代码中，注意 LOOP 标签后面的都属于 LOOP 中，所以一般标签写在函数的最后面，一般不推荐使用 goto 语句</p>\n</blockquote>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">main</span><span class=\"params\">()</span></span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\tx := <span class=\"number\">1</span></span><br><span class=\"line\">\t<span class=\"keyword\">goto</span> LOOP</span><br><span class=\"line\">\tfmt.Println(<span class=\"string\">&quot; 该行代码是执行不到的 &quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">LOOP:</span><br><span class=\"line\">\tx += <span class=\"number\">1</span></span><br><span class=\"line\">\tfmt.Printf(<span class=\"string\">&quot; 该行代码是可以执行的，x 为：%d&quot;</span>, x)</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"随机数\"><a href=\"# 随机数\" class=\"headerlink\" title=\"随机数\"></a>随机数 </h2><h3 id=\"时间戳\"><a href=\"# 时间戳\" class=\"headerlink\" title=\"时间戳\"></a> 时间戳</h3><figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">main</span><span class=\"params\">()</span></span> &#123;</span><br><span class=\"line\">\t<span class=\"comment\">// 秒时间戳</span></span><br><span class=\"line\">\ttimeStamp := time.Now().Unix()</span><br><span class=\"line\">\t<span class=\"comment\">// 毫秒时间戳</span></span><br><span class=\"line\">\ttimeMillisecond := time.Now().UnixMilli()</span><br><span class=\"line\">\t<span class=\"built_in\">println</span>(timeMillisecond)</span><br><span class=\"line\">\t<span class=\"built_in\">println</span>(timeStamp)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"生成随机数\"><a href=\"# 生成随机数\" class=\"headerlink\" title=\"生成随机数\"></a>生成随机数</h3><figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> <span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">main</span><span class=\"params\">()</span></span> &#123;</span><br><span class=\"line\">\trand.Intn(<span class=\"number\">100</span>)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"复合类型\"><a href=\"# 复合类型\" class=\"headerlink\" title=\"复合类型\"></a>复合类型 </h1><h2 id=\"数组\"><a href=\"# 数组\" class=\"headerlink\" title=\"数组\"></a> 数组</h2><blockquote>\n<p>数组的基本定义</p>\n</blockquote>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 未赋值的情况下，默认为 0</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> arr1[<span class=\"number\">1</span>] <span class=\"type\">int</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> arr2 = [...]<span class=\"type\">int</span>&#123;<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>&#125;</span><br><span class=\"line\"><span class=\"comment\">// 下标为 0 赋值为 1，下标为 3 的地方赋值为 2</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> arr3 = [...]<span class=\"type\">int</span>&#123;<span class=\"number\">0</span>: <span class=\"number\">1</span>, <span class=\"number\">3</span>: <span class=\"number\">2</span>&#125;</span><br><span class=\"line\"><span class=\"comment\">// 数组实际存储的元素个数</span></span><br><span class=\"line\">realLen := <span class=\"built_in\">len</span>(arr1)</span><br><span class=\"line\"><span class=\"comment\">// 数组最大可存储的元素个数</span></span><br><span class=\"line\">maxLen := <span class=\"built_in\">cap</span>(arr1)</span><br><span class=\"line\">fmt.Print(realLen)</span><br><span class=\"line\">fmt.Print(maxLen)</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>数组的 range 打印</p>\n</blockquote>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">main</span><span class=\"params\">()</span></span> &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">var</span> arr2 = []<span class=\"type\">int</span>&#123;<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> index, value := <span class=\"keyword\">range</span> arr2 &#123;</span><br><span class=\"line\">\t\tfmt.Printf(<span class=\"string\">&quot; 下标为：%d &quot;</span>, index)</span><br><span class=\"line\">\t\tfmt.Printf(<span class=\"string\">&quot; 值为：%d&quot;</span>, value)</span><br><span class=\"line\">\t\tfmt.Println()</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"comment\">// 舍弃下标</span></span><br><span class=\"line\">\t<span class=\"keyword\">for</span> _, val := <span class=\"keyword\">range</span> arr2 &#123;</span><br><span class=\"line\">\t\tfmt.Printf(<span class=\"string\">&quot; 值为：%d&quot;</span>, val)</span><br><span class=\"line\">\t\tfmt.Println()</span><br><span class=\"line\"></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>数组的复制 <br> 数组的复制是深拷贝，修改 arr3 不会影响到 arr2</p>\n</blockquote>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">main</span><span class=\"params\">()</span></span> &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">var</span> arr2 = [...]<span class=\"type\">int</span>&#123;<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">var</span> arr3 = arr2</span><br><span class=\"line\">\tarr3[<span class=\"number\">0</span>] = <span class=\"number\">9</span></span><br><span class=\"line\">\tfmt.Println(arr2)</span><br><span class=\"line\">\tfmt.Println(arr3)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>数组的比较 <br> 先比较数组长度和类型，然后依次比较数组中的值，及其顺序，是否都相同</p>\n</blockquote>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">main</span><span class=\"params\">()</span></span> &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">var</span> arr2 = [...]<span class=\"type\">int</span>&#123;<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">var</span> arr3 = arr2</span><br><span class=\"line\">\tfmt.Print(arr3 == arr2)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>数组元素的交换 <br> 冒泡排序</p>\n</blockquote>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">main</span><span class=\"params\">()</span></span> &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">var</span> arr3 = [...]<span class=\"type\">int</span>&#123;<span class=\"number\">2</span>, <span class=\"number\">1</span>, <span class=\"number\">3</span>&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> i := <span class=\"number\">0</span>; i &lt; <span class=\"built_in\">len</span>(arr3); i++ &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> j := <span class=\"number\">0</span>; j &lt; <span class=\"built_in\">len</span>(arr3)-i<span class=\"number\">-1</span>; j++ &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> arr3[j] &gt; arr3[j+<span class=\"number\">1</span>] &#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"comment\">// 交换位置</span></span><br><span class=\"line\">\t\t\t\tarr3[j], arr3[j+<span class=\"number\">1</span>] = arr3[j+<span class=\"number\">1</span>], arr3[j]</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tfmt.Println(arr3)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>二维数组</p>\n</blockquote>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 定义，默认值都为 0</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> arr3 [<span class=\"number\">3</span>][<span class=\"number\">2</span>]<span class=\"type\">int</span></span><br><span class=\"line\"><span class=\"comment\">// 定义并赋值</span></span><br><span class=\"line\">arr := [<span class=\"number\">3</span>][<span class=\"number\">2</span>]<span class=\"type\">int</span>&#123;&#123;<span class=\"number\">1</span>, <span class=\"number\">2</span>&#125;, &#123;<span class=\"number\">3</span>, <span class=\"number\">4</span>&#125;, &#123;<span class=\"number\">5</span>, <span class=\"number\">6</span>&#125;&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"切片\"><a href=\"# 切片\" class=\"headerlink\" title=\"切片\"></a>切片</h2><blockquote>\n<p>定义如下，不在 [] 中写长度，则表示切片，切片本身不存数据，存数据的是底层的变长数组</p>\n</blockquote>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> slice []<span class=\"type\">int</span></span><br><span class=\"line\">slice[<span class=\"number\">0</span>] = <span class=\"number\">1</span></span><br><span class=\"line\"></span><br><span class=\"line\">s2 := []<span class=\"type\">int</span>&#123;<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>&#125;</span><br><span class=\"line\">fmt.Println(s2)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 第一个参数表示创建的切片初始化为 0 的元素个数，第二个参数表示该切片目前设置的最大容量</span></span><br><span class=\"line\">s1 := <span class=\"built_in\">make</span>([]<span class=\"type\">int</span>, <span class=\"number\">0</span>, <span class=\"number\">8</span>)</span><br><span class=\"line\"><span class=\"comment\">// 如果添加的元素过多超过定义的原容量，容量就会自动扩容到原来的 2 倍，会开辟新的空间分配内存地址，则 s1 需要指向新的地址</span></span><br><span class=\"line\">s1 = <span class=\"built_in\">append</span>(s1, <span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>)</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>切片中添加其他切片</p>\n</blockquote>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">s1 := <span class=\"built_in\">make</span>([]<span class=\"type\">int</span>, <span class=\"number\">0</span>, <span class=\"number\">4</span>)</span><br><span class=\"line\">s1 = <span class=\"built_in\">append</span>(s1, <span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>)</span><br><span class=\"line\">s2 := []<span class=\"type\">int</span>&#123;<span class=\"number\">9</span>,<span class=\"number\">9</span>,<span class=\"number\">9</span>&#125;</span><br><span class=\"line\">s1 = <span class=\"built_in\">append</span>(s1, s2...)</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>从已有的数组中直接创建切片，操作切片也会影响到已有的数组  </p>\n</blockquote>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">main</span><span class=\"params\">()</span></span> &#123;</span><br><span class=\"line\">\tarr := [<span class=\"number\">10</span>]<span class=\"type\">int</span>&#123;<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>, <span class=\"number\">5</span>&#125;</span><br><span class=\"line\">\t<span class=\"comment\">// 取下标 2&lt;=x&lt;4 的元素</span></span><br><span class=\"line\">\tslice := arr[<span class=\"number\">2</span>:<span class=\"number\">4</span>]</span><br><span class=\"line\">\tfmt.Println(slice)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>切片超过原数组的右边界</p>\n</blockquote>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">main</span><span class=\"params\">()</span></span> &#123;</span><br><span class=\"line\">\tarr := [<span class=\"number\">5</span>]<span class=\"type\">int</span>&#123;<span class=\"number\">5</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>, <span class=\"number\">5</span>&#125;</span><br><span class=\"line\">\t<span class=\"comment\">// 取下标 2&lt;=x&lt;4 的元素</span></span><br><span class=\"line\">\tslice := arr[<span class=\"number\">2</span>:<span class=\"number\">4</span>]</span><br><span class=\"line\">\t<span class=\"comment\">// 如果添加的元素未超过数组的右边界，则会改变原数组的值</span></span><br><span class=\"line\">\tslice = <span class=\"built_in\">append</span>(slice, <span class=\"number\">9</span>)</span><br><span class=\"line\">\t<span class=\"comment\">// 继续添加元素，直到超过数组的右边界，则会复制切片的数据，并重新开辟一个新的空间</span></span><br><span class=\"line\">\tslice = <span class=\"built_in\">append</span>(slice, <span class=\"number\">9</span>)</span><br><span class=\"line\">\tfmt.Println(slice)</span><br><span class=\"line\">\tfmt.Println(arr)</span><br><span class=\"line\">\tfmt.Println(<span class=\"built_in\">len</span>(slice), <span class=\"built_in\">cap</span>(slice))</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>切片的复制，是引用类型的复制，属于浅拷贝</p>\n</blockquote>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">main</span><span class=\"params\">()</span></span> &#123;</span><br><span class=\"line\">\ts1 := []<span class=\"type\">int</span>&#123;<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>&#125;</span><br><span class=\"line\">\ts2 := s1</span><br><span class=\"line\">\tfmt.Println(s1,s2)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>切片的深拷贝</p>\n</blockquote>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">main</span><span class=\"params\">()</span></span> &#123;</span><br><span class=\"line\">\ts1 := []<span class=\"type\">int</span>&#123;<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>&#125;</span><br><span class=\"line\">\t<span class=\"comment\">// 第二个参数必须大于等于需要 copy 的元素个数</span></span><br><span class=\"line\">\ts2 := <span class=\"built_in\">make</span>([]<span class=\"type\">int</span>, <span class=\"built_in\">len</span>(s1), <span class=\"built_in\">len</span>(s1))</span><br><span class=\"line\">\ts3 := <span class=\"built_in\">make</span>([]<span class=\"type\">int</span>, <span class=\"built_in\">len</span>(s1)<span class=\"number\">-1</span>, <span class=\"built_in\">len</span>(s1)<span class=\"number\">-1</span>)</span><br><span class=\"line\">\t<span class=\"built_in\">copy</span>(s2, s1)</span><br><span class=\"line\">\t<span class=\"comment\">// 部分拷贝</span></span><br><span class=\"line\">\t<span class=\"built_in\">copy</span>(s3, s2[:<span class=\"number\">2</span>])</span><br><span class=\"line\">\tfmt.Println(s3)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"Map 集合\"><a href=\"#Map 集合\" class=\"headerlink\" title=\"Map 集合\"></a>Map 集合</h2><blockquote>\n<p>Map 的定义与创建</p>\n</blockquote>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">main</span><span class=\"params\">()</span></span> &#123;</span><br><span class=\"line\">\t<span class=\"comment\">// 定义一个空引用，没分配实际的存储地址，所以无法使用，也就是说 maap1=nil</span></span><br><span class=\"line\">\t<span class=\"keyword\">var</span> map1 <span class=\"keyword\">map</span>[<span class=\"type\">string</span>]<span class=\"type\">int</span></span><br><span class=\"line\">\t<span class=\"comment\">// 分配实际空间</span></span><br><span class=\"line\">\tmap2 := <span class=\"built_in\">make</span>(<span class=\"keyword\">map</span>[<span class=\"type\">string</span>]<span class=\"type\">int</span>)</span><br><span class=\"line\">\t<span class=\"comment\">// 直接初始化</span></span><br><span class=\"line\">\tmap3 := <span class=\"keyword\">map</span>[<span class=\"type\">string</span>]<span class=\"type\">int</span>&#123;<span class=\"string\">&quot;Go&quot;</span>: <span class=\"number\">100</span>, <span class=\"string\">&quot;Java&quot;</span>: <span class=\"number\">100</span>, <span class=\"string\">&quot;C++&quot;</span>: <span class=\"number\">90</span>&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>Map 的元素返回</p>\n</blockquote>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">main</span><span class=\"params\">()</span></span> &#123;</span><br><span class=\"line\">\tmap1 := <span class=\"built_in\">make</span>(<span class=\"keyword\">map</span>[<span class=\"type\">string</span>]<span class=\"type\">int</span>)</span><br><span class=\"line\">\tmap1[<span class=\"string\">&quot;test&quot;</span>] = <span class=\"number\">0</span></span><br><span class=\"line\">\tval, exist := map1[<span class=\"string\">&quot;test&quot;</span>]</span><br><span class=\"line\">\tfmt.Printf(<span class=\"string\">&quot;key 为 %d, val 为 %t&quot;</span>, val, exist)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>Map 元素的删除</p>\n</blockquote>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">main</span><span class=\"params\">()</span></span> &#123;</span><br><span class=\"line\">\tmap1 := <span class=\"built_in\">make</span>(<span class=\"keyword\">map</span>[<span class=\"type\">string</span>]<span class=\"type\">int</span>)</span><br><span class=\"line\">\tmap1[<span class=\"string\">&quot;test&quot;</span>] = <span class=\"number\">0</span></span><br><span class=\"line\">\t<span class=\"built_in\">delete</span>(map1, <span class=\"string\">&quot;test&quot;</span>)</span><br><span class=\"line\">\tfmt.Println(<span class=\"built_in\">len</span>(map1))</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>遍历 Map 集合</p>\n</blockquote>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">main</span><span class=\"params\">()</span></span> &#123;</span><br><span class=\"line\">\tmap1 := <span class=\"keyword\">map</span>[<span class=\"type\">string</span>]<span class=\"type\">int</span>&#123;<span class=\"string\">&quot;Golang&quot;</span>: <span class=\"number\">100</span>, <span class=\"string\">&quot;Java&quot;</span>: <span class=\"number\">100</span>, <span class=\"string\">&quot;C++&quot;</span>: <span class=\"number\">90</span>&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> key, val := <span class=\"keyword\">range</span> map1 &#123;</span><br><span class=\"line\">\t\tfmt.Print(<span class=\"string\">&quot;key:&quot;</span> + key + <span class=\"string\">&quot; &quot;</span>)</span><br><span class=\"line\">\t\tfmt.Printf(<span class=\"string\">&quot;val: %d&quot;</span>, val)</span><br><span class=\"line\">\t\tfmt.Println()</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>Map 与切片的结合</p>\n</blockquote>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">main</span><span class=\"params\">()</span></span> &#123;</span><br><span class=\"line\">\tuserList := <span class=\"built_in\">make</span>([]<span class=\"keyword\">map</span>[<span class=\"type\">string</span>]<span class=\"type\">string</span>, <span class=\"number\">0</span>, <span class=\"number\">3</span>)</span><br><span class=\"line\">\tuserList = <span class=\"built_in\">append</span>(userList, <span class=\"keyword\">map</span>[<span class=\"type\">string</span>]<span class=\"type\">string</span>&#123;<span class=\"string\">&quot;name&quot;</span>: <span class=\"string\">&quot; 谢特智力 &quot;</span>&#125;)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n","url":"/posts/42803/","min2read":10,"word4post":"2.2k","prev_post":null,"next_post":{"title":"Golang-qucikStart","url":"/posts/34244/"},"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" data-id=\"类型区分\" href = \"#\"><span class=\"toc-number\">1.</span> <span class=\"toc-text\">类型区分 </span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" data-id=\"值类型传递\" href = \"#\"><span class=\"toc-number\">1.1.</span> <span class=\"toc-text\"> 值类型传递</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" data-id=\"引用类型传递\" href = \"#\"><span class=\"toc-number\">1.2.</span> <span class=\"toc-text\">引用类型传递</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" data-id=\"变量与常量\" href = \"#\"><span class=\"toc-number\">2.</span> <span class=\"toc-text\">变量与常量 </span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" data-id=\"变量\" href = \"#\"><span class=\"toc-number\">2.1.</span> <span class=\"toc-text\"> 变量</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" data-id=\"常量\" href = \"#\"><span class=\"toc-number\">2.2.</span> <span class=\"toc-text\">常量</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" data-id=\"运算\" href = \"#\"><span class=\"toc-number\">3.</span> <span class=\"toc-text\">运算 </span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" data-id=\"按位运算\" href = \"#\"><span class=\"toc-number\">3.1.</span> <span class=\"toc-text\"> 按位运算</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" data-id=\"运算符优先级（从上到下）\" href = \"#\"><span class=\"toc-number\">3.2.</span> <span class=\"toc-text\">运算符优先级（从上到下）</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" data-id=\"输入输出\" href = \"#\"><span class=\"toc-number\">4.</span> <span class=\"toc-text\">输入输出 </span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" data-id=\"占位符\" href = \"#\"><span class=\"toc-number\">4.1.</span> <span class=\"toc-text\"> 占位符</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" data-id=\"输入输出样式\" href = \"#\"><span class=\"toc-number\">4.2.</span> <span class=\"toc-text\"> 输入输出样式</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" data-id=\"逻辑语句\" href = \"#\"><span class=\"toc-number\">5.</span> <span class=\"toc-text\">逻辑语句</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" data-id=\"IF 语句\" href = \"#\"><span class=\"toc-number\">5.1.</span> <span class=\"toc-text\">IF 语句</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" data-id=\"switch 语句\" href = \"#\"><span class=\"toc-number\">5.2.</span> <span class=\"toc-text\">switch 语句</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" data-id=\"循环语句\" href = \"#\"><span class=\"toc-number\">5.3.</span> <span class=\"toc-text\">循环语句</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" data-id=\"for 循环\" href = \"#\"><span class=\"toc-number\">5.3.1.</span> <span class=\"toc-text\">for 循环</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" data-id=\"跳转语句\" href = \"#\"><span class=\"toc-number\">5.4.</span> <span class=\"toc-text\">跳转语句</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" data-id=\"goto 语句\" href = \"#\"><span class=\"toc-number\">5.4.1.</span> <span class=\"toc-text\">goto 语句</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" data-id=\"随机数\" href = \"#\"><span class=\"toc-number\">5.5.</span> <span class=\"toc-text\">随机数 </span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" data-id=\"时间戳\" href = \"#\"><span class=\"toc-number\">5.5.1.</span> <span class=\"toc-text\"> 时间戳</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" data-id=\"生成随机数\" href = \"#\"><span class=\"toc-number\">5.5.2.</span> <span class=\"toc-text\">生成随机数</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" data-id=\"复合类型\" href = \"#\"><span class=\"toc-number\">6.</span> <span class=\"toc-text\">复合类型 </span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" data-id=\"数组\" href = \"#\"><span class=\"toc-number\">6.1.</span> <span class=\"toc-text\"> 数组</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" data-id=\"切片\" href = \"#\"><span class=\"toc-number\">6.2.</span> <span class=\"toc-text\">切片</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" data-id=\"Map 集合\" href = \"#\"><span class=\"toc-number\">6.3.</span> <span class=\"toc-text\">Map 集合</span></a></li></ol></li></ol>","categories":[{"name":"Golang","path":"api/categories/Golang.json","url":"/categories/Golang/"}],"tags":[{"name":"Golang","path":"api/tags/Golang.json","url":"/tags/Golang/"}]}