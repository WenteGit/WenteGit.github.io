{"title":"Golang-Grammar","slug":"Golang-Grammar","date":"2024-01-15","updated":"2024-01-16","comments":true,"path":"api/posts/42803.json","excerpt":"<blockquote><p> 关于 Golang 的语法学习 </p></blockquote>","cover":null,"covers":null,"content":"<blockquote>\n<p>关于 Golang 的语法学习</p>\n</blockquote>\n<span id=\"more\"></span>\n<h1 id=\"变量\"><a href=\"# 变量\" class=\"headerlink\" title=\"变量\"></a>变量</h1><figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 定义变量后赋值，如果没有赋值，默认为 0，字符串的话默认为空串，数组的话默认为空数组。浮点值的默认也是 0</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> num1 <span class=\"type\">int</span></span><br><span class=\"line\">num1 = <span class=\"number\">10</span></span><br><span class=\"line\"><span class=\"comment\">// 直接写</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> num2 <span class=\"type\">int</span> = <span class=\"number\">20</span></span><br><span class=\"line\"><span class=\"comment\">// 类型推断，定义完成之后类型就确定好了</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> num3 = <span class=\"number\">30</span></span><br><span class=\"line\"><span class=\"comment\">// 简短声明，左侧变量至少得有一个是新的变量, 且不能定义全局变量</span></span><br><span class=\"line\">num4 := <span class=\"number\">40</span></span><br></pre></td></tr></table></figure>\n<h1 id=\"常量\"><a href=\"# 常量\" class=\"headerlink\" title=\"常量\"></a>常量</h1><blockquote>\n<p>常量组</p>\n</blockquote>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> (</span><br><span class=\"line\">\tUnknown = <span class=\"number\">0</span></span><br><span class=\"line\">\tFemale = <span class=\"number\">1</span></span><br><span class=\"line\">\tMale = <span class=\"number\">2</span></span><br><span class=\"line\">)</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>iota 默认为 0，表示 const 中定义的常量个数</p>\n</blockquote>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> (</span><br><span class=\"line\">\ta = <span class=\"literal\">iota</span></span><br><span class=\"line\">\tb = <span class=\"literal\">iota</span></span><br><span class=\"line\">\tc = <span class=\"literal\">iota</span></span><br><span class=\"line\">)</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>如果常量没有指定值，默认为上一行的值</p>\n</blockquote>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">  <span class=\"keyword\">const</span> (</span><br><span class=\"line\">a = <span class=\"literal\">iota</span>   <span class=\"comment\">//0</span></span><br><span class=\"line\">b          <span class=\"comment\">//1</span></span><br><span class=\"line\">c          <span class=\"comment\">//2</span></span><br><span class=\"line\">d = <span class=\"string\">&quot;ha&quot;</span>   <span class=\"comment\">// 独立值，iota += 1</span></span><br><span class=\"line\">e          <span class=\"comment\">//&quot;ha&quot;   iota += 1</span></span><br><span class=\"line\">f = <span class=\"number\">100</span>    <span class=\"comment\">//iota +=1</span></span><br><span class=\"line\">g          <span class=\"comment\">//100  iota +=1</span></span><br><span class=\"line\">h = <span class=\"literal\">iota</span>   <span class=\"comment\">//7, 恢复计数</span></span><br><span class=\"line\">i          <span class=\"comment\">//8</span></span><br><span class=\"line\">  )</span><br></pre></td></tr></table></figure>\n\n\n<h1 id=\"运算\"><a href=\"# 运算\" class=\"headerlink\" title=\"运算\"></a>运算 </h1><h2 id=\"按位运算\"><a href=\"# 按位运算\" class=\"headerlink\" title=\"按位运算\"></a> 按位运算</h2><ul>\n<li>按位与：&amp;，二元运算，全为 1 则为 1，其他都为 0</li>\n<li>按位或：|，二元运算，同位有 1 则为 1，全 0 则为 0</li>\n<li>异或运算：<ul>\n<li>^，二元运算，相同则为 0，不同则为 1</li>\n<li>^，一元运算，包括符号位在内，取反</li>\n</ul>\n</li>\n<li>移位运算<ul>\n<li>a &lt;&lt; 2，向左移 2 位，最低位补 0</li>\n<li>a &gt;&gt;2，a 向右移 2 位，最高位补符号位</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"运算符优先级（从上到下）\"><a href=\"# 运算符优先级（从上到下）\" class=\"headerlink\" title=\"运算符优先级（从上到下）\"></a>运算符优先级（从上到下）</h2><ul>\n<li>~、!、++、–</li>\n<li>*、/、%、&lt;&lt;、&gt;&gt;、&amp;</li>\n<li>+、-、^</li>\n<li>==、!=、&lt;、&lt;=、&gt;=、&gt;</li>\n<li>&lt;-</li>\n<li>&amp;&amp;</li>\n<li>||</li>\n</ul>\n<h1 id=\"输入输出\"><a href=\"# 输入输出\" class=\"headerlink\" title=\"输入输出\"></a>输入输出 </h1><h2 id=\"占位符\"><a href=\"# 占位符\" class=\"headerlink\" title=\"占位符\"></a> 占位符</h2><ul>\n<li>%v，原样打出</li>\n<li>%T，打印类型</li>\n<li>%t，bool 类型</li>\n<li>%s，字符串类型</li>\n<li>%f，浮点数类型</li>\n<li>%d，十进制整数类型</li>\n<li>%b，二进制整数类型</li>\n<li>%o，八进制整数类型</li>\n<li>%x，十六进制整数类型<ul>\n<li>%x：0-9，a-f</li>\n<li>%X: 0-9，A-F</li>\n</ul>\n</li>\n<li>%c，字符类型</li>\n<li>%p，指针目标对象的内存地址</li>\n</ul>\n<h1 id=\"逻辑语句\"><a href=\"# 逻辑语句\" class=\"headerlink\" title=\"逻辑语句\"></a>逻辑语句</h1><h2 id=\"IF 语句\"><a href=\"#IF 语句\" class=\"headerlink\" title=\"IF 语句\"></a>IF 语句</h2><blockquote>\n<p>含初始化语句</p>\n</blockquote>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// num 只在 if 内可以用到，出了 if 则用不到</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> num := <span class=\"number\">4</span>;num&gt;<span class=\"number\">0</span>&#123;</span><br><span class=\"line\">\tfmt.Println(<span class=\"string\">&quot; 正数 &quot;</span>,num)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">else</span> <span class=\"keyword\">if</span> num ==<span class=\"number\">0</span>&#123;</span><br><span class=\"line\">\tfmt.Println(<span class=\"string\">&quot; 为零 &quot;</span>,num)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>不含初始化语句</p>\n</blockquote>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">num := <span class=\"number\">1</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> num&gt;<span class=\"number\">0</span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">else</span> <span class=\"keyword\">if</span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"switch 语句\"><a href=\"#switch 语句\" class=\"headerlink\" title=\"switch 语句\"></a>switch 语句</h2><blockquote>\n<p>标准写法</p>\n</blockquote>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">switch</span> num1 &#123;</span><br><span class=\"line\"><span class=\"keyword\">case</span> <span class=\"number\">1</span>:</span><br><span class=\"line\">\tfmt.Println(<span class=\"string\">&quot;num1 是 1&quot;</span>)</span><br><span class=\"line\">\t<span class=\"keyword\">break</span></span><br><span class=\"line\"><span class=\"keyword\">case</span> <span class=\"number\">2</span>:</span><br><span class=\"line\">\t<span class=\"keyword\">break</span></span><br><span class=\"line\"><span class=\"keyword\">case</span> <span class=\"number\">3</span>:</span><br><span class=\"line\">\t<span class=\"keyword\">break</span></span><br><span class=\"line\"><span class=\"keyword\">default</span>:</span><br><span class=\"line\">\t<span class=\"keyword\">break</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>省略 switch 后的变量，默认是布尔值</p>\n</blockquote>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">switch</span> &#123;</span><br><span class=\"line\"><span class=\"keyword\">case</span> <span class=\"literal\">true</span>:</span><br><span class=\"line\">\t<span class=\"keyword\">break</span></span><br><span class=\"line\"><span class=\"keyword\">case</span> <span class=\"literal\">false</span>:</span><br><span class=\"line\">\t<span class=\"keyword\">break</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>case 匹配多个</p>\n</blockquote>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> letter = <span class=\"string\">&quot;B&quot;</span></span><br><span class=\"line\"><span class=\"keyword\">switch</span> letter &#123;</span><br><span class=\"line\"><span class=\"keyword\">case</span> <span class=\"string\">&quot;A&quot;</span>, <span class=\"string\">&quot;E&quot;</span>, <span class=\"string\">&quot;I&quot;</span>, <span class=\"string\">&quot;O&quot;</span>, <span class=\"string\">&quot;U&quot;</span>:</span><br><span class=\"line\">\tfmt.Println(<span class=\"string\">&quot; 该字母是元音 &quot;</span>)</span><br><span class=\"line\">\t<span class=\"keyword\">break</span></span><br><span class=\"line\"><span class=\"keyword\">default</span>:</span><br><span class=\"line\">\tfmt.Println(<span class=\"string\">&quot; 该字母不是元音 &quot;</span>)</span><br><span class=\"line\">\t<span class=\"keyword\">break</span></span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>初始化语句</p>\n</blockquote>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">switch</span> letter := <span class=\"string\">&quot;A&quot;</span>;letter &#123;</span><br><span class=\"line\"><span class=\"keyword\">case</span> <span class=\"string\">&quot;A&quot;</span>, <span class=\"string\">&quot;E&quot;</span>, <span class=\"string\">&quot;I&quot;</span>, <span class=\"string\">&quot;O&quot;</span>, <span class=\"string\">&quot;U&quot;</span>:</span><br><span class=\"line\">\tfmt.Println(<span class=\"string\">&quot; 该字母是元音 &quot;</span>)</span><br><span class=\"line\">\t<span class=\"keyword\">break</span></span><br><span class=\"line\"><span class=\"keyword\">default</span>:</span><br><span class=\"line\">\tfmt.Println(<span class=\"string\">&quot; 该字母不是元音 &quot;</span>)</span><br><span class=\"line\">\t<span class=\"keyword\">break</span></span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>贯通后续的 case</p>\n</blockquote>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">switch</span> a := <span class=\"number\">1</span>; a &#123;</span><br><span class=\"line\"><span class=\"keyword\">case</span> <span class=\"number\">1</span>:</span><br><span class=\"line\">\tfmt.Println(<span class=\"string\">&quot;a=1&quot;</span>)</span><br><span class=\"line\">\t<span class=\"keyword\">fallthrough</span></span><br><span class=\"line\"><span class=\"keyword\">case</span> <span class=\"number\">2</span>:</span><br><span class=\"line\">\tfmt.Println(<span class=\"string\">&quot; 执行了贯穿 &quot;</span>)</span><br><span class=\"line\"><span class=\"keyword\">case</span> <span class=\"number\">3</span>:</span><br><span class=\"line\">\tfmt.Println(<span class=\"string\">&quot; 如果 case2 中也有 fallthrough，该语句也会被执行 &quot;</span>)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>","url":"/posts/42803/","min2read":3,"word4post":711,"prev_post":null,"next_post":{"title":"Golang-qucikStart","url":"/posts/34244/"},"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" data-id=\"变量\" href = \"#\"><span class=\"toc-number\">1.</span> <span class=\"toc-text\">变量</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" data-id=\"常量\" href = \"#\"><span class=\"toc-number\">2.</span> <span class=\"toc-text\">常量</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" data-id=\"运算\" href = \"#\"><span class=\"toc-number\">3.</span> <span class=\"toc-text\">运算 </span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" data-id=\"按位运算\" href = \"#\"><span class=\"toc-number\">3.1.</span> <span class=\"toc-text\"> 按位运算</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" data-id=\"运算符优先级（从上到下）\" href = \"#\"><span class=\"toc-number\">3.2.</span> <span class=\"toc-text\">运算符优先级（从上到下）</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" data-id=\"输入输出\" href = \"#\"><span class=\"toc-number\">4.</span> <span class=\"toc-text\">输入输出 </span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" data-id=\"占位符\" href = \"#\"><span class=\"toc-number\">4.1.</span> <span class=\"toc-text\"> 占位符</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" data-id=\"逻辑语句\" href = \"#\"><span class=\"toc-number\">5.</span> <span class=\"toc-text\">逻辑语句</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" data-id=\"IF 语句\" href = \"#\"><span class=\"toc-number\">5.1.</span> <span class=\"toc-text\">IF 语句</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" data-id=\"switch 语句\" href = \"#\"><span class=\"toc-number\">5.2.</span> <span class=\"toc-text\">switch 语句</span></a></li></ol></li></ol>","categories":[{"name":"Golang","path":"api/categories/Golang.json","url":"/categories/Golang/"}],"tags":[{"name":"Golang","path":"api/tags/Golang.json","url":"/tags/Golang/"}]}