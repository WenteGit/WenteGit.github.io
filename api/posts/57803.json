{"title":"Golang-Improve","slug":"Golang-improve","date":"2024-01-28","updated":"2024-01-31","comments":true,"path":"api/posts/57803.json","excerpt":"<blockquote><p>Golang 的进阶提升 </p></blockquote>","cover":null,"covers":null,"content":"<blockquote>\n<p>Golang 的进阶提升</p>\n</blockquote>\n<span id=\"more\"></span>\n<h1 id=\"包\"><a href=\"# 包\" class=\"headerlink\" title=\"包\"></a>包 </h1><h2 id=\"包的基本使用\"><a href=\"# 包的基本使用\" class=\"headerlink\" title=\"包的基本使用\"></a> 包的基本使用</h2><blockquote>\n<p>使用要点</p>\n<ul>\n<li>一个目录下的统计文件归属一个包，package 的声明要一致</li>\n<li>package 声明的包和对应的目录名可以不一致，但习惯上还是要写成一致的</li>\n<li>包可以嵌套</li>\n<li>同包下的函数不需要导入包，可以直接使用</li>\n<li>main()所在的包，其他包不能使用</li>\n<li>导入包的时候，路径要从 src 下开始写</li>\n</ul>\n</blockquote>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> (</span><br><span class=\"line\">\t<span class=\"comment\">// 给包起别名</span></span><br><span class=\"line\">\te <span class=\"string\">&quot;awesomeProject/entities&quot;</span></span><br><span class=\"line\">\t<span class=\"string\">&quot;awesomeProject/utils&quot;</span></span><br><span class=\"line\">\t<span class=\"string\">&quot;fmt&quot;</span></span><br><span class=\"line\">)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">main</span><span class=\"params\">()</span></span> &#123;</span><br><span class=\"line\">\tutils.PrintNow()</span><br><span class=\"line\">\tstu := e.Student&#123;Name: <span class=\"string\">&quot; 文特 &quot;</span>, Age: <span class=\"number\">22</span>, Grade: <span class=\"string\">&quot;2024&quot;</span>&#125;</span><br><span class=\"line\">\tfmt.Println(stu)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>注意首字母</p>\n</blockquote>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// Student 首字母大写表示外部包可以访问</span></span><br><span class=\"line\"><span class=\"keyword\">type</span> Student <span class=\"keyword\">struct</span> &#123;</span><br><span class=\"line\">\tName  <span class=\"type\">string</span></span><br><span class=\"line\">\tAge   <span class=\"type\">int</span></span><br><span class=\"line\">\tGrade <span class=\"type\">string</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"init 包初始化\"><a href=\"#init 包初始化\" class=\"headerlink\" title=\"init 包初始化\"></a>init 包初始化</h2><blockquote>\n<p>init 函数的执行顺序如下：</p>\n<ul>\n<li>在同一个 Go 文件中，init 函数的执行顺序是从上到下的</li>\n<li>在同一个包，不同的 Go 文件中，是会将文件名按字符串从小到大排序之后，按从小到大的顺序调用各文件的 init 函数</li>\n<li>在不同的包，如果不相互依赖的话，按照 main 包中 import 的顺序调用其中的 init 函数</li>\n<li>如果 package 存在依赖，那最后被依赖的，最先被执行，例如（-&gt; 表示导入）：main -&gt; pk1 -&gt; pk2 -&gt;pk3，则 pk3 的 init 先执行</li>\n<li>存在依赖的包，不能循环导入，比如说 pk1-&gt;pk2-&gt;pk3, 但是 pk3-&gt;pk1，这样就不行</li>\n<li>一个包可以被导入多次，但是只能被初始化一次</li>\n</ul>\n</blockquote>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">&quot;fmt&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">main</span><span class=\"params\">()</span></span> &#123;</span><br><span class=\"line\">\tfmt.Println(<span class=\"string\">&quot; 主函数执行 &quot;</span>)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">init</span><span class=\"params\">()</span></span> &#123;</span><br><span class=\"line\">\tfmt.Println(<span class=\"string\">&quot; 第一个 init 函数 &quot;</span>)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">init</span><span class=\"params\">()</span></span> &#123;</span><br><span class=\"line\">\tfmt.Println(<span class=\"string\">&quot; 第二个 init 函数 &quot;</span>)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// 输出如下：</span></span><br><span class=\"line\">第一个 init 函数 </span><br><span class=\"line\"> 第二个 init 函数 </span><br><span class=\"line\"> 主函数执行</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>init 函数与 main 函数的区别与联系</p>\n</blockquote>\n<ul>\n<li>都是 go 语言中的保留函数，init 用于初始化信息，main 作为程序的入口</li>\n<li>都不能有参数和返回值，也不能被引用</li>\n<li>init 函数可以有多个且可以定义在任意的包中，main 函数只能在 main 包下，并且只能有一个</li>\n<li>执行顺序：先执行 init 函数，后执行 main 函数</li>\n</ul>\n<blockquote>\n<p>只执行该包下的 init 操作，并不调用函数</p>\n</blockquote>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> _ <span class=\"string\">&quot;awesomeProject/init&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">main</span><span class=\"params\">()</span></span> &#123;</span><br><span class=\"line\">\tfmt.Println(<span class=\"string\">&quot; 主函数执行 &quot;</span>)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"获取远程包\"><a href=\"# 获取远程包\" class=\"headerlink\" title=\"获取远程包\"></a>获取远程包</h2><blockquote>\n<p>获取 mysql 的包，在 go.mod 文件所在的目录下执行</p>\n</blockquote>\n<figure class=\"highlight cmd\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">go get github.com/go-sql-driver/mysql</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>测试 mysql 包</p>\n</blockquote>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> (</span><br><span class=\"line\">\t<span class=\"string\">&quot;database/sql&quot;</span></span><br><span class=\"line\">\t<span class=\"string\">&quot;fmt&quot;</span></span><br><span class=\"line\">\t_ <span class=\"string\">&quot;github.com/go-sql-driver/mysql&quot;</span></span><br><span class=\"line\">)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">Connect</span><span class=\"params\">()</span></span> &#123;</span><br><span class=\"line\">\tdb, err := sql.Open(<span class=\"string\">&quot;mysql&quot;</span>, <span class=\"string\">&quot;root:root@tcp(127.0.0.1:3306)/wedo?charset=utf-8&quot;</span>)</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> err != <span class=\"literal\">nil</span> &#123;</span><br><span class=\"line\">\t\tfmt.Println(<span class=\"string\">&quot; 连接错误！&quot;</span>)</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tfmt.Println(<span class=\"string\">&quot; 链接成功，db 信息为：&quot;</span>, db)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"time 包\"><a href=\"#time 包\" class=\"headerlink\" title=\"time 包\"></a>time 包</h2><blockquote>\n<p>获取指定的时间</p>\n</blockquote>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">main</span><span class=\"params\">()</span></span> &#123;</span><br><span class=\"line\">\tt1 := time.Date(<span class=\"number\">2008</span>, <span class=\"number\">7</span>, <span class=\"number\">15</span>, <span class=\"number\">16</span>, <span class=\"number\">30</span>, <span class=\"number\">28</span>, <span class=\"number\">0</span>, time.Local)</span><br><span class=\"line\">\tfmt.Println(t1)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>Time 与字符串类型的互换</p>\n</blockquote>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">main</span><span class=\"params\">()</span></span> &#123;</span><br><span class=\"line\">\t<span class=\"comment\">// Time 转字符串：Format</span></span><br><span class=\"line\">\tt1 := time.Now()</span><br><span class=\"line\">\ts1 := t1.Format(<span class=\"string\">&quot;2006 年 1 月 2 日 15:04:05&quot;</span>)</span><br><span class=\"line\">\ts2 := t1.Format(<span class=\"string\">&quot;2006/1/2&quot;</span>)</span><br><span class=\"line\">\tfmt.Println(s1)</span><br><span class=\"line\">\tfmt.Println(s2)</span><br><span class=\"line\">\t<span class=\"comment\">// 字符串转 Time：Parse</span></span><br><span class=\"line\">\tstr1 := <span class=\"string\">&quot;2001 年 12 月 5 日 &quot;</span></span><br><span class=\"line\">\tt2, err := time.Parse(<span class=\"string\">&quot;2006 年 1 月 2 日 &quot;</span>, str1)</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> err != <span class=\"literal\">nil</span> &#123;</span><br><span class=\"line\">\t\tfmt.Println(<span class=\"string\">&quot;err：&quot;</span>, err)</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tfmt.Println(<span class=\"string\">&quot; 时间为：&quot;</span>, t2)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>根据 Time 的时间，获取指定的部分时间内容</p>\n</blockquote>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">main</span><span class=\"params\">()</span></span> &#123;</span><br><span class=\"line\">\tt1 := time.Now()</span><br><span class=\"line\">\tyear, month, day := t1.Date()</span><br><span class=\"line\">\tfmt.Println(<span class=\"string\">&quot; 当前年：&quot;</span>, year)</span><br><span class=\"line\">\tfmt.Println(<span class=\"string\">&quot; 当前月：&quot;</span>, month)</span><br><span class=\"line\">\tfmt.Println(<span class=\"string\">&quot; 当前日：&quot;</span>, day)</span><br><span class=\"line\">\t<span class=\"comment\">// 指定部分获取</span></span><br><span class=\"line\">\tyear2 := t1.Year()</span><br><span class=\"line\">\tmonth2 := t1.Month()</span><br><span class=\"line\">\tday2 := t1.Day()</span><br><span class=\"line\">\thour := t1.Hour()</span><br><span class=\"line\">\tminute := t1.Minute()</span><br><span class=\"line\">\tsecond := t1.Second()</span><br><span class=\"line\">\tweekday := t1.Weekday()</span><br><span class=\"line\">\tfmt.Println(year2)</span><br><span class=\"line\">\tfmt.Println(month2)</span><br><span class=\"line\">\tfmt.Println(day2)</span><br><span class=\"line\">\tfmt.Println(hour)</span><br><span class=\"line\">\tfmt.Println(minute)</span><br><span class=\"line\">\tfmt.Println(second)</span><br><span class=\"line\">\tfmt.Println(weekday)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>获取以毫秒为单位的时间戳</p>\n</blockquote>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">main</span><span class=\"params\">()</span></span> &#123;</span><br><span class=\"line\">\tt1 := time.Now()</span><br><span class=\"line\">\tmilliSecond := t1.UnixMilli()</span><br><span class=\"line\">\tfmt.Println(milliSecond)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>将指定的 Time 加上一定的时间</p>\n</blockquote>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">main</span><span class=\"params\">()</span></span> &#123;</span><br><span class=\"line\">\tt1 := time.Now()</span><br><span class=\"line\">\tt2 := t1.Add(time.Minute)</span><br><span class=\"line\">\tt3 := t1.AddDate(<span class=\"number\">1</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>)</span><br><span class=\"line\">\tfmt.Println(<span class=\"string\">&quot;ti:&quot;</span>, t1)</span><br><span class=\"line\">\tfmt.Println(<span class=\"string\">&quot;t2:&quot;</span>, t2)</span><br><span class=\"line\">\tfmt.Println(<span class=\"string\">&quot;t3:&quot;</span>, t3)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>睡眠函数</p>\n</blockquote>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">main</span><span class=\"params\">()</span></span> &#123;</span><br><span class=\"line\">\tfmt.Println(<span class=\"string\">&quot; 开始进入睡眠 &quot;</span>)</span><br><span class=\"line\">\trandNum := rand.Intn(<span class=\"number\">10</span>)</span><br><span class=\"line\">\ttime.Sleep(time.Second * time.Duration(randNum))</span><br><span class=\"line\">\tfmt.Println(<span class=\"string\">&quot; 睡眠结束，共睡了：&quot;</span>, randNum, <span class=\"string\">&quot; 秒 &quot;</span>)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>计算时间的差值</p>\n</blockquote>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">main</span><span class=\"params\">()</span></span> &#123;</span><br><span class=\"line\">\tt1 := time.Now()</span><br><span class=\"line\">\tt2 := t1.Add(time.Hour)</span><br><span class=\"line\">\t<span class=\"comment\">// t1 - t2 的差值</span></span><br><span class=\"line\">\tsubTime := t1.Sub(t2)</span><br><span class=\"line\">\tfmt.Println(subTime)</span><br><span class=\"line\">\t<span class=\"comment\">// 获取差值的小时部分</span></span><br><span class=\"line\">\th := subTime.Hours()</span><br><span class=\"line\">\tfmt.Println(h)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"file 包\"><a href=\"#file 包\" class=\"headerlink\" title=\"file 包\"></a>file 包</h2><blockquote>\n<p>打开文件</p>\n</blockquote>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">main</span><span class=\"params\">()</span></span> &#123;</span><br><span class=\"line\">\tfile, err := os.Stat(<span class=\"string\">&quot;D:\\\\AAA\\\\txt\\\\door_msg.txt&quot;</span>)</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> err != <span class=\"literal\">nil</span> &#123;</span><br><span class=\"line\">\t\tfmt.Println(<span class=\"string\">&quot; 出现错误，err 为：&quot;</span>, err)</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tfmt.Println(<span class=\"string\">&quot; 打开成功，file 名为：&quot;</span>, file.Name())</span><br><span class=\"line\">\tfmt.Println(<span class=\"string\">&quot; 文件大小为：&quot;</span>, file.Size())</span><br><span class=\"line\">\tfmt.Println(<span class=\"string\">&quot; 是否是目录：&quot;</span>, file.IsDir())</span><br><span class=\"line\">\tfmt.Println(<span class=\"string\">&quot; 修改时间为：&quot;</span>, file.ModTime())</span><br><span class=\"line\">\tfmt.Println(<span class=\"string\">&quot; 文件权限问：&quot;</span>, file.Mode())</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>文件的权限 <br> 举例：-rw-rw-rw，表示 owner，group，others 分别拥有读写权限，但是都没有 x 的可执行权限</p>\n<ul>\n<li>r -&gt; 004</li>\n<li>w -&gt; 002</li>\n<li>x -&gt; 001</li>\n<li>‘-‘ -&gt; 000</li>\n</ul>\n</blockquote>\n<blockquote>\n<p>文件操作：判断是否是绝对路径并获取其父目录</p>\n</blockquote>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">main</span><span class=\"params\">()</span></span> &#123;</span><br><span class=\"line\">\tfileName := <span class=\"string\">&quot;D:\\\\AAA\\\\txt\\\\dete_org.txt&quot;</span></span><br><span class=\"line\">\tfmt.Println(filepath.IsAbs(fileName))</span><br><span class=\"line\">\t<span class=\"comment\">// 获取父目录</span></span><br><span class=\"line\">\tparantDir := filepath.Join(fileName, <span class=\"string\">&quot;..&quot;</span>)</span><br><span class=\"line\">\tfmt.Println(parantDir)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>文件操作：创建目录</p>\n</blockquote>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">main</span><span class=\"params\">()</span></span> &#123;</span><br><span class=\"line\">\tfileDir := <span class=\"string\">&quot;D:\\\\AAA\\\\txt\\\\test&quot;</span></span><br><span class=\"line\">\t<span class=\"comment\">// 如果 fileDir 中需要创建多级目录，或者目录中有一些目录不存在，则需要用到 makeDirAll</span></span><br><span class=\"line\">\terr := os.Mkdir(fileDir, os.ModePerm)</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> err != <span class=\"literal\">nil</span> &#123;</span><br><span class=\"line\">\t\tfmt.Println(<span class=\"string\">&quot; 文件夹创建失败 &quot;</span>)</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tfmt.Println(<span class=\"string\">&quot; 文件夹创建成功 &quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>文件操作：创建一个文件</p>\n</blockquote>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">main</span><span class=\"params\">()</span></span> &#123;</span><br><span class=\"line\">\tfileDir := <span class=\"string\">&quot;D:\\\\AAA\\\\txt\\\\test\\\\text.txt&quot;</span></span><br><span class=\"line\">\tfile, err := os.Create(fileDir)</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> err != <span class=\"literal\">nil</span> &#123;</span><br><span class=\"line\">\t\tfmt.Println(<span class=\"string\">&quot; 文件创建失败，err:&quot;</span>, err)</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tfmt.Println(<span class=\"string\">&quot; 文件创建成功，文件名问：&quot;</span>, file.Name())</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>文件操作：打开一个文件，处理完逻辑之后并关闭链接</p>\n</blockquote>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">main</span><span class=\"params\">()</span></span> &#123;</span><br><span class=\"line\">\tfileDir := <span class=\"string\">&quot;D:\\\\AAA\\\\txt\\\\test\\\\text.txt&quot;</span></span><br><span class=\"line\">\tfile1, err := os.Open(fileDir)</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> err != <span class=\"literal\">nil</span> &#123;</span><br><span class=\"line\">\t\tfmt.Println(<span class=\"string\">&quot; 打开只读文件失败！&quot;</span>)</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tfmt.Println(<span class=\"string\">&quot; 打开只读文件成功，文件名是：&quot;</span>, file1.Name())</span><br><span class=\"line\">\t<span class=\"comment\">// 第二个参数表示打开文件的权限，第三参数表示如果没有这个文件，则创建这个文件的赋予其的权限是什么</span></span><br><span class=\"line\">\tfile2, err := os.OpenFile(fileDir, os.O_WRONLY|os.O_RDONLY, os.ModePerm)</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> err != <span class=\"literal\">nil</span> &#123;</span><br><span class=\"line\">\t\tfmt.Println(<span class=\"string\">&quot; 打开读写文件失败！&quot;</span>)</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tfmt.Println(<span class=\"string\">&quot; 打开读写文件成功，文件名是：&quot;</span>, file2.Name())</span><br><span class=\"line\">\tfile2.Close()</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>文件操作：删除文件或空目录</p>\n</blockquote>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">main</span><span class=\"params\">()</span></span> &#123;</span><br><span class=\"line\">\tfileDir := <span class=\"string\">&quot;D:\\\\AAA\\\\txt\\\\test\\\\text.txt&quot;</span></span><br><span class=\"line\">\t<span class=\"comment\">// 删除文件</span></span><br><span class=\"line\">\terr := os.Remove(fileDir)</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> err != <span class=\"literal\">nil</span> &#123;</span><br><span class=\"line\">\t\tfmt.Println(<span class=\"string\">&quot; 删除文件失败！&quot;</span>)</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"comment\">// 删除空目录</span></span><br><span class=\"line\">\tdir := filepath.Join(fileDir, <span class=\"string\">&quot;..&quot;</span>)</span><br><span class=\"line\">\terr2 := os.Remove(dir)</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> err2 != <span class=\"literal\">nil</span> &#123;</span><br><span class=\"line\">\t\tfmt.Println(<span class=\"string\">&quot; 删除文件夹失败！&quot;</span>)</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tfmt.Println(<span class=\"string\">&quot; 删除均成功！&quot;</span>)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>文件操作：删除目录及其下面的所有文件</p>\n</blockquote>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">main</span><span class=\"params\">()</span></span> &#123;</span><br><span class=\"line\">\tfileDir := <span class=\"string\">&quot;D:\\\\AAA\\\\txt\\\\test&quot;</span></span><br><span class=\"line\">\terr := os.RemoveAll(fileDir)</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> err != <span class=\"literal\">nil</span> &#123;</span><br><span class=\"line\">\t\tfmt.Println(<span class=\"string\">&quot; 删除目录及所有文件失败！&quot;</span>)</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tfmt.Println(<span class=\"string\">&quot; 删除目录及所有文件成功！&quot;</span>)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>os.ReadDir 递归遍历文件夹</p>\n</blockquote>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">main</span><span class=\"params\">()</span></span> &#123;</span><br><span class=\"line\">\tdirPath := <span class=\"string\">&quot;D:\\\\AAA\\\\txt&quot;</span></span><br><span class=\"line\">\tdiguiVisit(dirPath, <span class=\"number\">0</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">diguiVisit</span><span class=\"params\">(dirPath <span class=\"type\">string</span>, level <span class=\"type\">int</span>)</span></span> &#123;</span><br><span class=\"line\">\tfilesInfos, _ := os.ReadDir(dirPath)</span><br><span class=\"line\">\t<span class=\"comment\">// 打印目录前缀</span></span><br><span class=\"line\">\tprefix := <span class=\"string\">&quot;&quot;</span></span><br><span class=\"line\">\t<span class=\"keyword\">for</span> i := <span class=\"number\">0</span>; i &lt; level; i++ &#123;</span><br><span class=\"line\">\t\tprefix = <span class=\"string\">&quot;| &quot;</span> + prefix</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> _, file := <span class=\"keyword\">range</span> filesInfos &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> file.IsDir() &#123;</span><br><span class=\"line\">\t\t\tfmt.Println(prefix+<span class=\"string\">&quot;|-&quot;</span>, file.Name())</span><br><span class=\"line\">\t\t\tnextDir := dirPath + <span class=\"string\">&quot;\\\\&quot;</span> + file.Name()</span><br><span class=\"line\">\t\t\tdiguiVisit(nextDir, level+<span class=\"number\">1</span>)</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">continue</span></span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\tfmt.Println(prefix+<span class=\"string\">&quot;|-&quot;</span>, file.Name())</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"IO 包\"><a href=\"#IO 包\" class=\"headerlink\" title=\"IO 包\"></a>IO 包</h2><blockquote>\n<p>读取操作</p>\n</blockquote>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">main</span><span class=\"params\">()</span></span> &#123;</span><br><span class=\"line\">\tfilePath := <span class=\"string\">&quot;D:\\\\AAA\\\\txt\\\\a.txt&quot;</span></span><br><span class=\"line\">\tfile, err := os.Open(filePath)</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> err != <span class=\"literal\">nil</span> &#123;</span><br><span class=\"line\">\t\tfmt.Println(<span class=\"string\">&quot; 打开文件失败！&quot;</span>)</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">defer</span> file.Close()</span><br><span class=\"line\">\tsliceTemp := <span class=\"built_in\">make</span>([]<span class=\"type\">byte</span>, <span class=\"number\">512</span>, <span class=\"number\">512</span>)</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> &#123;</span><br><span class=\"line\">\t\tn, err := file.Read(sliceTemp)</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> err != <span class=\"literal\">nil</span> &amp;&amp; err == io.EOF &#123;</span><br><span class=\"line\">\t\t\tfmt.Println(<span class=\"string\">&quot; 读取到底了 &quot;</span>)</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">break</span></span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\tfmt.Println(<span class=\"string\">&quot; 本次读取到了 &quot;</span>, n, <span class=\"string\">&quot; 个字节 &quot;</span>)</span><br><span class=\"line\">\t\tfmt.Printf(<span class=\"string\">&quot; 本次读取到的数据是：\\n%s&quot;</span>, <span class=\"type\">string</span>(sliceTemp[:n]))</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>写入操作</p>\n</blockquote>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">main</span><span class=\"params\">()</span></span> &#123;</span><br><span class=\"line\">\tfilePath := <span class=\"string\">&quot;D:\\\\AAA\\\\txt\\\\w.txt&quot;</span></span><br><span class=\"line\">\tfile, err := os.OpenFile(filePath, os.O_WRONLY|os.O_CREATE|os.O_APPEND, os.ModePerm)</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> err != <span class=\"literal\">nil</span> &#123;</span><br><span class=\"line\">\t\tfmt.Println(<span class=\"string\">&quot; 错误已发生！&quot;</span>, err)</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tfmt.Println(file.Name())</span><br><span class=\"line\">\tstr := <span class=\"string\">&quot; 文特 &quot;</span></span><br><span class=\"line\">\tn, err2 := file.Write([]<span class=\"type\">byte</span>(str))</span><br><span class=\"line\">\tn, err3 := file.WriteString(str)</span><br><span class=\"line\">\tfmt.Println(<span class=\"string\">&quot; 写了 &quot;</span>, n, <span class=\"string\">&quot; 个字节 &quot;</span>)</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> err2 != <span class=\"literal\">nil</span> &amp;&amp; err3 != <span class=\"literal\">nil</span> &#123;</span><br><span class=\"line\">\t\tfmt.Println(<span class=\"string\">&quot; 写入失败！&quot;</span>)</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tfmt.Println(<span class=\"string\">&quot; 写入成功！&quot;</span>)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>复制操作</p>\n</blockquote>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">main</span><span class=\"params\">()</span></span> &#123;</span><br><span class=\"line\">\tcopyFile(<span class=\"string\">&quot;D:\\\\AAA\\\\txt\\\\w.txt&quot;</span>, <span class=\"string\">&quot;D:\\\\AAA\\\\txt\\\\wc.txt&quot;</span>)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">copyFile</span><span class=\"params\">(sourceFile <span class=\"type\">string</span>, targetFile <span class=\"type\">string</span>)</span></span> &#123;</span><br><span class=\"line\">\tfr, err := os.Open(sourceFile)</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> err != <span class=\"literal\">nil</span> &#123;</span><br><span class=\"line\">\t\tfmt.Println(<span class=\"string\">&quot; 打开文件失败！&quot;</span>)</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">defer</span> fr.Close()</span><br><span class=\"line\"></span><br><span class=\"line\">\tfw, err := os.OpenFile(targetFile, os.O_WRONLY|os.O_APPEND|os.O_CREATE, os.ModePerm)</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> err != <span class=\"literal\">nil</span> &#123;</span><br><span class=\"line\">\t\tfmt.Println(<span class=\"string\">&quot; 打开目标文件失败！&quot;</span>)</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">defer</span> fw.Close()</span><br><span class=\"line\"></span><br><span class=\"line\">\tn, err := io.Copy(fw, fr)</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> err != <span class=\"literal\">nil</span> &#123;</span><br><span class=\"line\">\t\tfmt.Println(<span class=\"string\">&quot; 输出文件失败！&quot;</span>)</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tfmt.Println(<span class=\"string\">&quot; 共输出了 &quot;</span>, n, <span class=\"string\">&quot; 个字节！&quot;</span>)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>通过 OpenFile 打开的文件，同一次打开的话，如果是写完立刻读的话，无法在同一次链接中读取到，也就是说，当前链接对文件的修改对当前链接是不可见的</p>\n</blockquote>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">Test</span><span class=\"params\">()</span></span> &#123;</span><br><span class=\"line\">\ttempPath := <span class=\"string\">&quot;D:\\\\AAA\\\\txt\\\\tempT.txt&quot;</span></span><br><span class=\"line\">\tfile, err := os.OpenFile(tempPath, os.O_RDWR|os.O_CREATE, <span class=\"number\">0644</span>)</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> err != <span class=\"literal\">nil</span> &#123;</span><br><span class=\"line\">\t\tfmt.Println(<span class=\"string\">&quot;Error opening file:&quot;</span>, err)</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">defer</span> file.Close() <span class=\"comment\">// Defer closing the file until the function returns</span></span><br><span class=\"line\"></span><br><span class=\"line\">\tbuffer := <span class=\"built_in\">make</span>([]<span class=\"type\">byte</span>, <span class=\"number\">100</span>) <span class=\"comment\">// No need to specify capacity if it&#x27;s the same as the length</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">for</span> i := <span class=\"number\">0</span>; i &lt; <span class=\"number\">10</span>; i++ &#123;</span><br><span class=\"line\">\t\tn, err := file.Read(buffer)</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> err != <span class=\"literal\">nil</span> &amp;&amp; err != io.EOF &#123;</span><br><span class=\"line\">\t\t\tfmt.Println(<span class=\"string\">&quot;Error reading file:&quot;</span>, err)</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">return</span></span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\tfmt.Println(<span class=\"type\">string</span>(buffer[:n]))     <span class=\"comment\">// Print only the bytes read</span></span><br><span class=\"line\">\t\t_, err = file.WriteString(<span class=\"string\">&quot;test\\n&quot;</span>) <span class=\"comment\">// Write data to the end of the file</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> err != <span class=\"literal\">nil</span> &#123;</span><br><span class=\"line\">\t\t\tfmt.Println(<span class=\"string\">&quot;Error writing to file:&quot;</span>, err)</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">return</span></span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>Seek 的使用</p>\n</blockquote>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">main</span><span class=\"params\">()</span></span> &#123;</span><br><span class=\"line\">\tfileName := <span class=\"string\">&quot;D:\\\\AAA\\\\txt\\\\w.txt&quot;</span></span><br><span class=\"line\">\tfile, err := os.OpenFile(fileName, os.O_RDWR, os.ModePerm)</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> err != <span class=\"literal\">nil</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tbyteArr := <span class=\"built_in\">make</span>([]<span class=\"type\">byte</span>, <span class=\"number\">1</span>, <span class=\"number\">2</span>)</span><br><span class=\"line\">\t<span class=\"comment\">// 控制光标偏移量在首位后两位</span></span><br><span class=\"line\">\tfile.Seek(<span class=\"number\">2</span>, io.SeekStart)</span><br><span class=\"line\">\tfile.Read(byteArr)</span><br><span class=\"line\">\tfmt.Println(<span class=\"string\">&quot; 读到的数据是：&quot;</span>, <span class=\"type\">string</span>(byteArr))</span><br><span class=\"line\">\t<span class=\"comment\">// 控制光标偏移量在当前位置再往后移 offset+1 位</span></span><br><span class=\"line\">\tfile.Seek(<span class=\"number\">0</span>, io.SeekCurrent)</span><br><span class=\"line\">\tfile.Read(byteArr)</span><br><span class=\"line\">\tfmt.Println(<span class=\"string\">&quot; 读到的数据是：&quot;</span>, <span class=\"type\">string</span>(byteArr))</span><br><span class=\"line\">\t<span class=\"comment\">// 控制光标偏移量在末尾，并写入数据，模拟了 Append 的写入</span></span><br><span class=\"line\">\tfile.Seek(<span class=\"number\">0</span>, io.SeekEnd)</span><br><span class=\"line\">\tfile.WriteString(<span class=\"string\">&quot;Test&quot;</span>)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>断点续传：四个步骤</p>\n<ul>\n<li>读临时文件的复制进度</li>\n<li>通过进度，改变源文件的偏移量及其目标文件的偏移量，表示从哪开始复制，粘贴到目标文件的哪个位置</li>\n<li>进行复制操作，先读源文件，然后写到目标文件</li>\n<li>更新进度偏移量</li>\n</ul>\n</blockquote>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">main</span><span class=\"params\">()</span></span> &#123;</span><br><span class=\"line\">\tsrcPath := <span class=\"string\">&quot;D:\\\\AAA\\\\txt\\\\cxy.jpg&quot;</span></span><br><span class=\"line\">\ttempPath := <span class=\"string\">&quot;D:\\\\AAA\\\\txt\\\\temp.txt&quot;</span></span><br><span class=\"line\">\ttargetPath := <span class=\"string\">&quot;D:\\\\AAA\\\\txt\\\\target.jpg&quot;</span></span><br><span class=\"line\">\tsrcFile, err := os.Open(srcPath)</span><br><span class=\"line\">\tHandleErr(err)</span><br><span class=\"line\">\t<span class=\"keyword\">defer</span> srcFile.Close()</span><br><span class=\"line\"></span><br><span class=\"line\">\ttempFile, err := os.OpenFile(tempPath, os.O_RDWR|os.O_CREATE, os.ModePerm)</span><br><span class=\"line\">\tHandleErr(err)</span><br><span class=\"line\">\t<span class=\"keyword\">defer</span> tempFile.Close()</span><br><span class=\"line\"></span><br><span class=\"line\">\ttargetFile, err := os.OpenFile(targetPath, os.O_RDWR|os.O_CREATE, os.ModePerm)</span><br><span class=\"line\">\tHandleErr(err)</span><br><span class=\"line\">\t<span class=\"keyword\">defer</span> targetFile.Close()</span><br><span class=\"line\"></span><br><span class=\"line\">\tbufferTemp := <span class=\"built_in\">make</span>([]<span class=\"type\">byte</span>, <span class=\"number\">100</span>, <span class=\"number\">100</span>)</span><br><span class=\"line\">\t<span class=\"comment\">// 读当前的进度</span></span><br><span class=\"line\">\tcurrentOffset := <span class=\"number\">0</span></span><br><span class=\"line\">\tread, _ := tempFile.Read(bufferTemp)</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> read != <span class=\"number\">0</span> &#123;</span><br><span class=\"line\">\t\tcurrentOffset, err = strconv.Atoi(<span class=\"type\">string</span>(bufferTemp[:read]))</span><br><span class=\"line\">\t\tHandleErr(err)</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"comment\">// 设置读写进度</span></span><br><span class=\"line\">\tsrcFile.Seek(<span class=\"type\">int64</span>(currentOffset), io.SeekStart)</span><br><span class=\"line\">\ttargetFile.Seek(<span class=\"type\">int64</span>(currentOffset), io.SeekStart)</span><br><span class=\"line\">\tbuffer := <span class=\"built_in\">make</span>([]<span class=\"type\">byte</span>, <span class=\"number\">1024</span>, <span class=\"number\">1024</span>)</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> &#123;</span><br><span class=\"line\">\t\treadN, err := srcFile.Read(buffer)</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> err == io.EOF || readN == <span class=\"number\">0</span> &#123;</span><br><span class=\"line\">\t\t\ttargetFile.Close()</span><br><span class=\"line\">\t\t\tfmt.Println(<span class=\"string\">&quot; 复制完成 &quot;</span>)</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">break</span></span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\twriteN, err := targetFile.Write(buffer[:readN])</span><br><span class=\"line\">\t\tHandleErr(err)</span><br><span class=\"line\">\t\t<span class=\"comment\">// 更新当前进度</span></span><br><span class=\"line\">\t\tcurrentOffset += writeN</span><br><span class=\"line\">\t\tfmt.Println(<span class=\"string\">&quot; 当前复制进度为：&quot;</span>, currentOffset)</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> currentOffset &gt; <span class=\"number\">9000</span> &#123;</span><br><span class=\"line\">\t\t\t<span class=\"built_in\">panic</span>(<span class=\"string\">&quot;Test&quot;</span>)</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\ttempFile.Seek(<span class=\"number\">0</span>, io.SeekStart)</span><br><span class=\"line\">\t\ttempFile.WriteString(strconv.Itoa(currentOffset))</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">HandleErr</span><span class=\"params\">(err <span class=\"type\">error</span>)</span></span> &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> err != <span class=\"literal\">nil</span> &#123;</span><br><span class=\"line\">\t\tlog.Fatal(err)</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>bufio 的读操作：p 的大小最好小于缓冲区的大小，缓冲区才有意义</p>\n</blockquote>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">main</span><span class=\"params\">()</span></span> &#123;</span><br><span class=\"line\">\tfilePath := <span class=\"string\">&quot;D:\\\\AAA\\\\txt\\\\a.txt&quot;</span></span><br><span class=\"line\">\tfile, err := os.Open(filePath)</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> err != <span class=\"literal\">nil</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tbr := bufio.NewReader(file)</span><br><span class=\"line\">\t<span class=\"comment\">// 1,Read()</span></span><br><span class=\"line\">\tp := <span class=\"built_in\">make</span>([]<span class=\"type\">byte</span>, <span class=\"number\">512</span>, <span class=\"number\">512</span>)</span><br><span class=\"line\">\t<span class=\"comment\">// 默认缓冲区大小是 4kb</span></span><br><span class=\"line\">\treadN, _ := br.Read(p)</span><br><span class=\"line\">\tfmt.Println(<span class=\"string\">&quot; 读到的字节数是：&quot;</span>, readN)</span><br><span class=\"line\">\tfmt.Println(<span class=\"type\">string</span>(p))</span><br><span class=\"line\">\t<span class=\"comment\">// 2,ReadLine()</span></span><br><span class=\"line\">\tline, flag, _ := br.ReadLine()</span><br><span class=\"line\">\tfmt.Println(<span class=\"type\">string</span>(line))</span><br><span class=\"line\">\tfmt.Println(flag)</span><br><span class=\"line\">\t<span class=\"comment\">// 3,ReadString()</span></span><br><span class=\"line\">\ts1, _ := br.ReadString(<span class=\"string\">&#x27;\\n&#x27;</span>)</span><br><span class=\"line\">\tfmt.Println(s1)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>bufio 的写操作</p>\n</blockquote>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">main</span><span class=\"params\">()</span></span> &#123;</span><br><span class=\"line\">\tfilePath := <span class=\"string\">&quot;D:\\\\AAA\\\\txt\\\\t.txt&quot;</span></span><br><span class=\"line\">\tfile, err := os.OpenFile(filePath, os.O_CREATE|os.O_WRONLY, os.ModePerm)</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> err != <span class=\"literal\">nil</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">defer</span> file.Close()</span><br><span class=\"line\">\t<span class=\"comment\">// 写入流</span></span><br><span class=\"line\">\tbw := bufio.NewWriter(file)</span><br><span class=\"line\">\twsBytes, err := bw.WriteString(<span class=\"string\">&quot;Test&quot;</span>)</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> err != <span class=\"literal\">nil</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"comment\">// 把缓冲区的数据手动刷到文件中</span></span><br><span class=\"line\">\tbw.Flush()</span><br><span class=\"line\">\tfmt.Println(wsBytes)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n","url":"/posts/57803/","min2read":14,"word4post":"3k","prev_post":null,"next_post":{"title":"Golang-Grammar","url":"/posts/42803/"},"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" data-id=\"包\" href = \"#\"><span class=\"toc-number\">1.</span> <span class=\"toc-text\">包 </span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" data-id=\"包的基本使用\" href = \"#\"><span class=\"toc-number\">1.1.</span> <span class=\"toc-text\"> 包的基本使用</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" data-id=\"init 包初始化\" href = \"#\"><span class=\"toc-number\">1.2.</span> <span class=\"toc-text\">init 包初始化</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" data-id=\"获取远程包\" href = \"#\"><span class=\"toc-number\">1.3.</span> <span class=\"toc-text\">获取远程包</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" data-id=\"time 包\" href = \"#\"><span class=\"toc-number\">1.4.</span> <span class=\"toc-text\">time 包</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" data-id=\"file 包\" href = \"#\"><span class=\"toc-number\">1.5.</span> <span class=\"toc-text\">file 包</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" data-id=\"IO 包\" href = \"#\"><span class=\"toc-number\">1.6.</span> <span class=\"toc-text\">IO 包</span></a></li></ol></li></ol>","categories":[{"name":"Golang","path":"api/categories/Golang.json","url":"/categories/Golang/"}],"tags":[{"name":"Golang","path":"api/tags/Golang.json","url":"/tags/Golang/"}]}