{"title":"MQ-Notes","slug":"MQ-Notes","date":"2022-07-26","updated":"2023-12-30","comments":true,"path":"api/posts/44276.json","excerpt":"<blockquote><p> 总结了关于消息中间件 MQ 的知识点 </p></blockquote>","cover":"http://xtzl.wentexl.cn/%E7%BC%96%E7%A0%81API.png","covers":["http://xtzl.wentexl.cn/%E7%BC%96%E7%A0%81API.png","http://xtzl.wentexl.cn/SCS%E6%9E%B6%E6%9E%84%E5%9B%BE2.png"],"content":"<blockquote>\n<p>总结了关于消息中间件 MQ 的知识点</p>\n</blockquote>\n<span id=\"more\"></span>\n<h1 id=\"核心 - 四大天王\"><a href=\"# 核心 - 四大天王\" class=\"headerlink\" title=\"核心: 四大天王\"></a>核心: 四大天王</h1><blockquote>\n<ul>\n<li>RabbitMQ</li>\n<li>RocketMQ</li>\n<li>ActiveMQ</li>\n<li>Kafka</li>\n</ul>\n</blockquote>\n<h1 id=\"引入依赖\"><a href=\"# 引入依赖\" class=\"headerlink\" title=\"引入依赖\"></a>引入依赖</h1><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- 添加消息总线 RabbitMQ 支持来实现广播 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework.cloud<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-cloud-starter-bus-amqp<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h1 id=\"client 和 Config 端都需要添加 yml 的 MQ 的相关支持\"><a href=\"#client 和 Config 端都需要添加 yml 的 MQ 的相关支持\" class=\"headerlink\" title=\"client 和 Config 端都需要添加 yml 的 MQ 的相关支持\"></a>client 和 Config 端都需要添加 yml 的 MQ 的相关支持</h1><figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#rabbitmq 相关配置</span></span><br><span class=\"line\"><span class=\"attr\">rabbitmq:</span></span><br><span class=\"line\">  <span class=\"attr\">host:</span> <span class=\"string\">localhost</span></span><br><span class=\"line\">  <span class=\"attr\">port:</span> <span class=\"number\">5672</span></span><br><span class=\"line\">  <span class=\"attr\">username:</span> <span class=\"string\">guest</span></span><br><span class=\"line\">  <span class=\"attr\">password:</span> <span class=\"string\">guest</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h1 id=\"只需要发送一次，则 client 端处处生效\"><a href=\"# 只需要发送一次，则 client 端处处生效\" class=\"headerlink\" title=\"只需要发送一次，则 client 端处处生效\"></a>只需要发送一次，则 client 端处处生效</h1><blockquote>\n<p><strong>中心 Config 端 多增加如下 MQ 配置，include 改为:bus-refresh</strong></p>\n</blockquote>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">##rabbitmq 相关配置, 暴露 bus 刷新配置的端点</span></span><br><span class=\"line\"><span class=\"attr\">management:</span></span><br><span class=\"line\">  <span class=\"attr\">endpoints:</span> <span class=\"comment\"># 暴露 bus 刷新配置的端点</span></span><br><span class=\"line\">    <span class=\"attr\">web:</span></span><br><span class=\"line\">      <span class=\"attr\">exposure:</span></span><br><span class=\"line\">        <span class=\"attr\">include:</span> <span class=\"string\">&#x27;bus-refresh&#x27;</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h1 id=\"运维发送全体通知和精确通知\"><a href=\"# 运维发送全体通知和精确通知\" class=\"headerlink\" title=\"运维发送全体通知和精确通知\"></a>运维发送全体通知和精确通知</h1><blockquote>\n<ul>\n<li>全体通知：<br>localhost:3344/actuator/bus-refresh<br>其中，3344 指的是中心 Config 端的端口号</li>\n</ul>\n<hr>\n<ul>\n<li>精确通知：<br>localhost:3344/actuator/bus-refresh/config-client:3366<br>其中，config-client 指的是 config 的服务名称，3366 是实例的端口号</li>\n</ul>\n<hr>\n</blockquote>\n<blockquote>\n<p>以上是利用 RabbitMQ 来实现动态刷新 Config 的优化</p>\n<hr>\n</blockquote>\n<h1 id=\"SpringCloud-Stream\"><a href=\"#SpringCloud-Stream\" class=\"headerlink\" title=\"SpringCloud Stream\"></a>SpringCloud Stream</h1><blockquote>\n<p><strong>重点</strong>  </p>\n<ul>\n<li>凡是涉及到监控、刷新的，必须要引入 actuator 这个依赖</li>\n<li>消费端不同的组可以存在重复消费</li>\n<li>消费端同一个组不能存在重复消费</li>\n<li>不做处理的默认每个接收的实例都是一个组</li>\n<li>消费端 group 属性十分重要，因为这个属性既可以解决重复消费，又可以解决消息持久化</li>\n</ul>\n<hr>\n<p><strong>核心设计思想</strong>  </p>\n<ul>\n<li> SpringCloud Stream 是一个构建消息驱动微服务的框架，应用程序通过 inputs 或者 outputs 来与 SpringCloud Stream 中的 binder 进行交互，我们可以通过配置来 binding ，而 SpringCloud Stream 的 binder 负责与中间件交互</li>\n<li> SpringCloud Stream 由一个中间件中立的核组成，应用通过 SpringCloud Stream 插入的 input(相当于消费者 consumer，它是从队列中接收消息的)和 output(相当于生产者 producer，它是发送消息到队列中的)通道与外界交流</li>\n<li> Binder 是 SpringCloud Stream 的一个抽象概念，是应用与消息中间件之间的粘合剂，目前 SpringCloud Stream 实现了 Kafka 和 RabbitMQ 的 binder 通过 binder，可以很方便的连接中间件，可以动态的改变消息的 destinations（对应于 Kafka 的 topic，RabbitMQ 的 exchanges），这些都可以通过外部配置项来做到，甚至可以任意的改变中间件的类型但是不需要修改一行代码</li>\n</ul>\n</blockquote>\n<h2 id=\"架构图 1\"><a href=\"# 架构图 1\" class=\"headerlink\" title=\"架构图 1\"></a>架构图 1</h2><p><img src=\"http://xtzl.wentexl.cn/%E7%BC%96%E7%A0%81API.png\" alt=\"alt\"></p>\n<h2 id=\"架构图 2\"><a href=\"# 架构图 2\" class=\"headerlink\" title=\"架构图 2\"></a>架构图 2</h2><p><img src=\"http://xtzl.wentexl.cn/SCS%E6%9E%B6%E6%9E%84%E5%9B%BE2.png\" alt=\"alt\"></p>\n<h2 id=\"Stream 的 yml 文件配置\"><a href=\"#Stream 的 yml 文件配置\" class=\"headerlink\" title=\"Stream 的 yml 文件配置\"></a>Stream 的 yml 文件配置</h2><blockquote>\n<p><strong>消息生产者(生产端)：</strong></p>\n</blockquote>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">server:</span></span><br><span class=\"line\">  <span class=\"attr\">port:</span> <span class=\"number\">8801</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">spring:</span></span><br><span class=\"line\">  <span class=\"attr\">application:</span></span><br><span class=\"line\">    <span class=\"attr\">name:</span> <span class=\"string\">cloud-stream-provider</span></span><br><span class=\"line\">  <span class=\"attr\">cloud:</span></span><br><span class=\"line\">    <span class=\"attr\">stream:</span></span><br><span class=\"line\">      <span class=\"attr\">binders:</span> <span class=\"comment\"># 在此处配置要绑定的 rabbitmq 的服务信息；</span></span><br><span class=\"line\">        <span class=\"attr\">defaultRabbit:</span> <span class=\"comment\"># 表示定义的名称，用于于 binding 整合</span></span><br><span class=\"line\">          <span class=\"attr\">type:</span> <span class=\"string\">rabbit</span> <span class=\"comment\"># 消息组件类型</span></span><br><span class=\"line\">          <span class=\"attr\">environment:</span> <span class=\"comment\"># 设置 rabbitmq 的相关的环境配置</span></span><br><span class=\"line\">            <span class=\"attr\">spring:</span></span><br><span class=\"line\">              <span class=\"attr\">rabbitmq:</span></span><br><span class=\"line\">                <span class=\"attr\">host:</span> <span class=\"string\">localhost</span></span><br><span class=\"line\">                <span class=\"attr\">port:</span> <span class=\"number\">5672</span></span><br><span class=\"line\">                <span class=\"attr\">username:</span> <span class=\"string\">guest</span></span><br><span class=\"line\">                <span class=\"attr\">password:</span> <span class=\"string\">guest</span></span><br><span class=\"line\">      <span class=\"attr\">bindings:</span> <span class=\"comment\"># 服务的整合处理</span></span><br><span class=\"line\">        <span class=\"attr\">output:</span> <span class=\"comment\"># 这个名字是一个通道的名称</span></span><br><span class=\"line\">          <span class=\"attr\">destination:</span> <span class=\"string\">studyExchange</span> <span class=\"comment\"># 表示要使用的 Exchange 名称定义</span></span><br><span class=\"line\">          <span class=\"attr\">content-type:</span> <span class=\"string\">application/json</span> <span class=\"comment\"># 设置消息类型，本次为 json，文本则设置“text/plain”</span></span><br><span class=\"line\">          <span class=\"attr\">default-binder:</span> <span class=\"string\">defaultRabbit</span>  <span class=\"comment\"># 设置要绑定的消息服务的具体设置</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">eureka:</span></span><br><span class=\"line\">  <span class=\"attr\">client:</span> <span class=\"comment\"># 客户端进行 Eureka 注册的配置</span></span><br><span class=\"line\">    <span class=\"attr\">service-url:</span></span><br><span class=\"line\">      <span class=\"attr\">defaultZone:</span> <span class=\"string\">http://localhost:7001/eureka</span></span><br><span class=\"line\">  <span class=\"attr\">instance:</span></span><br><span class=\"line\">    <span class=\"attr\">lease-renewal-interval-in-seconds:</span> <span class=\"number\">2</span> <span class=\"comment\"># 设置心跳的时间间隔（默认是 30 秒）</span></span><br><span class=\"line\">    <span class=\"attr\">lease-expiration-duration-in-seconds:</span> <span class=\"number\">5</span> <span class=\"comment\"># 如果现在超过了 5 秒的间隔（默认是 90 秒）</span></span><br><span class=\"line\">    <span class=\"attr\">instance-id:</span> <span class=\"string\">send-8802.com</span>  <span class=\"comment\"># 在信息列表时显示主机名称</span></span><br><span class=\"line\">    <span class=\"attr\">prefer-ip-address:</span> <span class=\"literal\">true</span>     <span class=\"comment\"># 访问的路径变为 IP 地址</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<blockquote>\n<hr>\n<p><strong>消息接收者(消费端)</strong></p>\n</blockquote>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">server:</span></span><br><span class=\"line\">  <span class=\"attr\">port:</span> <span class=\"number\">8803</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">spring:</span></span><br><span class=\"line\">  <span class=\"attr\">application:</span></span><br><span class=\"line\">    <span class=\"attr\">name:</span> <span class=\"string\">cloud-stream-consumer</span></span><br><span class=\"line\">  <span class=\"attr\">cloud:</span></span><br><span class=\"line\">    <span class=\"attr\">stream:</span></span><br><span class=\"line\">      <span class=\"attr\">binders:</span> <span class=\"comment\"># 在此处配置要绑定的 rabbitmq 的服务信息；</span></span><br><span class=\"line\">        <span class=\"attr\">defaultRabbit:</span> <span class=\"comment\"># 表示定义的名称，用于于 binding 整合</span></span><br><span class=\"line\">          <span class=\"attr\">type:</span> <span class=\"string\">rabbit</span> <span class=\"comment\"># 消息组件类型</span></span><br><span class=\"line\">          <span class=\"attr\">environment:</span> <span class=\"comment\"># 设置 rabbitmq 的相关的环境配置</span></span><br><span class=\"line\">            <span class=\"attr\">spring:</span></span><br><span class=\"line\">              <span class=\"attr\">rabbitmq:</span></span><br><span class=\"line\">                <span class=\"attr\">host:</span> <span class=\"string\">localhost</span></span><br><span class=\"line\">                <span class=\"attr\">port:</span> <span class=\"number\">5672</span></span><br><span class=\"line\">                <span class=\"attr\">username:</span> <span class=\"string\">guest</span></span><br><span class=\"line\">                <span class=\"attr\">password:</span> <span class=\"string\">guest</span></span><br><span class=\"line\">      <span class=\"attr\">bindings:</span> <span class=\"comment\"># 服务的整合处理</span></span><br><span class=\"line\">        <span class=\"attr\">input:</span> <span class=\"comment\"># 这个名字是一个通道的名称</span></span><br><span class=\"line\">          <span class=\"attr\">destination:</span> <span class=\"string\">studyExchange</span> <span class=\"comment\"># 表示要使用的 Exchange 名称定义</span></span><br><span class=\"line\">          <span class=\"attr\">content-type:</span> <span class=\"string\">application/json</span> <span class=\"comment\"># 设置消息类型，本次为对象 json，如果是文本则设置“text/plain”</span></span><br><span class=\"line\">          <span class=\"attr\">default-binder:</span> <span class=\"string\">defaultRabbit</span> <span class=\"comment\"># 设置要绑定的消息服务的具体设置</span></span><br><span class=\"line\">          <span class=\"attr\">group:</span> <span class=\"string\">atguiguA</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">eureka:</span></span><br><span class=\"line\">  <span class=\"attr\">client:</span> <span class=\"comment\"># 客户端进行 Eureka 注册的配置</span></span><br><span class=\"line\">    <span class=\"attr\">service-url:</span></span><br><span class=\"line\">      <span class=\"attr\">defaultZone:</span> <span class=\"string\">http://localhost:7001/eureka</span></span><br><span class=\"line\">  <span class=\"attr\">instance:</span></span><br><span class=\"line\">    <span class=\"attr\">lease-renewal-interval-in-seconds:</span> <span class=\"number\">2</span> <span class=\"comment\"># 设置心跳的时间间隔（默认是 30 秒）</span></span><br><span class=\"line\">    <span class=\"attr\">lease-expiration-duration-in-seconds:</span> <span class=\"number\">5</span> <span class=\"comment\"># 如果现在超过了 5 秒的间隔（默认是 90 秒）</span></span><br><span class=\"line\">    <span class=\"attr\">instance-id:</span> <span class=\"string\">receive-8803.com</span>  <span class=\"comment\"># 在信息列表时显示主机名称</span></span><br><span class=\"line\">    <span class=\"attr\">prefer-ip-address:</span> <span class=\"literal\">true</span>     <span class=\"comment\"># 访问的路径变为 IP 地址</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"业务层配置\"><a href=\"# 业务层配置\" class=\"headerlink\" title=\"业务层配置\"></a>业务层配置</h2><blockquote>\n<p><strong>消息生产者 (生产端)：</strong><br> 仅仅是发送消息到消息队列而已 <br> 其中关键注解是： @EnableBinding(Source.class)</p>\n</blockquote>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@RestController</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">SendMessageController</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"meta\">@Resource</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> IMessageProvider messageProvider;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@GetMapping(value = &quot;/sendMessage&quot;)</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> String <span class=\"title function_\">sendMessage</span><span class=\"params\">()</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> messageProvider.send();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\">------------------------ 下面是 Service 层 -------------------------------</span><br><span class=\"line\"><span class=\"meta\">@EnableBinding(Source.class)</span> <span class=\"comment\">// 定义消息的推送管道</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">MessageProviderImpl</span> <span class=\"keyword\">implements</span> <span class=\"title class_\">IMessageProvider</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"meta\">@Resource</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> MessageChannel output; <span class=\"comment\">// 消息发送管道</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> String <span class=\"title function_\">send</span><span class=\"params\">()</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"type\">String</span> <span class=\"variable\">serial</span> <span class=\"operator\">=</span> UUID.randomUUID().toString();</span><br><span class=\"line\">        output.send(MessageBuilder.withPayload(serial).build());</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;*****serial: &quot;</span>+serial);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">null</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p><strong>消息接收者 (消费端)：</strong><br> 从消息队列中取得信息 <br> 其中关键注解是: @EnableBinding(Sink.class)</p>\n</blockquote>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Component</span></span><br><span class=\"line\"><span class=\"meta\">@EnableBinding(Sink.class)</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">ReceiveMessageListener</span> &#123;</span><br><span class=\"line\">    <span class=\"meta\">@Value(&quot;$&#123;server.port&#125;&quot;)</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> String serverPort;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@StreamListener(Sink.INPUT)</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">input</span><span class=\"params\">(Message&lt;String&gt; message)</span> &#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;port:&quot;</span> + serverPort + <span class=\"string\">&quot;\\t 接受：&quot;</span> + message.getPayload());</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h1 id=\"消息持久化\"><a href=\"# 消息持久化\" class=\"headerlink\" title=\"消息持久化\"></a>消息持久化</h1><blockquote>\n<p>消息持久化主要是依靠 yml 配置中 binder 下的 input 下的 group 属性，当停机之后如果消息队列中有消息在流通，配置了 group 属性的实例，重启之后仍然能够收到消息，如果没配置的话，将会错过消息</p>\n</blockquote>\n","url":"/posts/44276/","min2read":5,"word4post":"1.4k","prev_post":{"title":"Nacos","url":"/posts/33695/"},"next_post":{"title":"Config","url":"/posts/8012/"},"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" data-id=\"核心 - 四大天王\" href = \"#\"><span class=\"toc-number\">1.</span> <span class=\"toc-text\">核心: 四大天王</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" data-id=\"引入依赖\" href = \"#\"><span class=\"toc-number\">2.</span> <span class=\"toc-text\">引入依赖</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" data-id=\"client 和 Config 端都需要添加 yml 的 MQ 的相关支持\" href = \"#\"><span class=\"toc-number\">3.</span> <span class=\"toc-text\">client 和 Config 端都需要添加 yml 的 MQ 的相关支持</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" data-id=\"只需要发送一次，则 client 端处处生效\" href = \"#\"><span class=\"toc-number\">4.</span> <span class=\"toc-text\">只需要发送一次，则 client 端处处生效</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" data-id=\"运维发送全体通知和精确通知\" href = \"#\"><span class=\"toc-number\">5.</span> <span class=\"toc-text\">运维发送全体通知和精确通知</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" data-id=\"SpringCloud-Stream\" href = \"#\"><span class=\"toc-number\">6.</span> <span class=\"toc-text\">SpringCloud Stream</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" data-id=\"架构图 1\" href = \"#\"><span class=\"toc-number\">6.1.</span> <span class=\"toc-text\">架构图 1</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" data-id=\"架构图 2\" href = \"#\"><span class=\"toc-number\">6.2.</span> <span class=\"toc-text\">架构图 2</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" data-id=\"Stream 的 yml 文件配置\" href = \"#\"><span class=\"toc-number\">6.3.</span> <span class=\"toc-text\">Stream 的 yml 文件配置</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" data-id=\"业务层配置\" href = \"#\"><span class=\"toc-number\">6.4.</span> <span class=\"toc-text\">业务层配置</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" data-id=\"消息持久化\" href = \"#\"><span class=\"toc-number\">7.</span> <span class=\"toc-text\">消息持久化</span></a></li></ol>","categories":[{"name":"MessageQueue","path":"api/categories/MessageQueue.json","url":"/categories/MessageQueue/"}],"tags":[{"name":"MQ","path":"api/tags/MQ.json","url":"/tags/MQ/"},{"name":"SpringCloud-Stream","path":"api/tags/SpringCloud-Stream.json","url":"/tags/SpringCloud-Stream/"}]}