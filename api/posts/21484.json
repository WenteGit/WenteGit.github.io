{"title":"SpringSecurity-Web 权限","slug":"boot-Security-web","date":"2022-08-04","updated":"2022-08-11","comments":true,"path":"api/posts/21484.json","excerpt":"<blockquote><p> 总结了关于 SpringSecurity 的 Web 权限控制方面的知识点 </p></blockquote>","cover":null,"covers":null,"content":"<blockquote>\n<p>总结了关于 SpringSecurity 的 Web 权限控制方面的知识点</p>\n</blockquote>\n<span id=\"more\"></span>\n<h1 id=\"设置登录的用户名和密码\"><a href=\"# 设置登录的用户名和密码\" class=\"headerlink\" title=\"设置登录的用户名和密码\"></a>设置登录的用户名和密码 </h1><h2 id=\"通过配置文件\"><a href=\"# 通过配置文件\" class=\"headerlink\" title=\"通过配置文件\"></a> 通过配置文件</h2><figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">spring:</span></span><br><span class=\"line\">  <span class=\"attr\">security:</span></span><br><span class=\"line\">    <span class=\"attr\">user:</span></span><br><span class=\"line\">      <span class=\"attr\">name:</span> <span class=\"string\">Wente</span></span><br><span class=\"line\">      <span class=\"attr\">password:</span> <span class=\"string\">wente695</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"自定义编写实现类\"><a href=\"# 自定义编写实现类\" class=\"headerlink\" title=\"自定义编写实现类\"></a>自定义编写实现类</h2><blockquote>\n<p>从数据库中获取账户和密码，验证的时候是通过用户名获取到数据库的数据</p>\n</blockquote>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Configuration</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">SecuriryConfig</span> <span class=\"keyword\">extends</span> <span class=\"title class_\">WebSecurityConfigurerAdapter</span> &#123;</span><br><span class=\"line\">    <span class=\"meta\">@Resource</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> UserDetailsService userDetailsService;</span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title function_\">configure</span><span class=\"params\">(AuthenticationManagerBuilder auth)</span> <span class=\"keyword\">throws</span> Exception &#123;</span><br><span class=\"line\">        auth.userDetailsService(userDetailsService).passwordEncoder(password());</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"meta\">@Bean</span></span><br><span class=\"line\">    PasswordEncoder <span class=\"title function_\">password</span><span class=\"params\">()</span>&#123;<span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"title class_\">BCryptPasswordEncoder</span>();&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><strong>Service 端</strong></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Override</span></span><br><span class=\"line\">  <span class=\"keyword\">public</span> UserDetails <span class=\"title function_\">loadUserByUsername</span><span class=\"params\">(String s)</span> <span class=\"keyword\">throws</span> UsernameNotFoundException &#123;</span><br><span class=\"line\">      List&lt;GrantedAuthority&gt; auths = AuthorityUtils.commaSeparatedStringToAuthorityList(<span class=\"string\">&quot;role&quot;</span>);</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"title class_\">User</span>(<span class=\"string\">&quot;mary&quot;</span>,<span class=\"keyword\">new</span> <span class=\"title class_\">BCryptPasswordEncoder</span>().encode(<span class=\"string\">&quot;123&quot;</span>),auths);</span><br><span class=\"line\">  &#125;</span><br></pre></td></tr></table></figure>\n<h1 id=\"基于角色或者权限进行访问控制\"><a href=\"# 基于角色或者权限进行访问控制\" class=\"headerlink\" title=\"基于角色或者权限进行访问控制\"></a>基于角色或者权限进行访问控制</h1><h2 id=\"hasAuthority- 方法\"><a href=\"#hasAuthority- 方法\" class=\"headerlink\" title=\"hasAuthority 方法\"></a>hasAuthority 方法</h2><blockquote>\n<p>在配置类设置当前访问地址有哪些权限 <br> 配置类中设置权限</p>\n</blockquote>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.antMatchers(<span class=\"string\">&quot;/test/index&quot;</span>).hasAnyAuthority(<span class=\"string\">&quot;admins&quot;</span>)<span class=\"comment\">// 当前登录用户只有具有 admins 权限的才能访问这个路径</span></span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>服务端配置权限</p>\n</blockquote>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">List&lt;GrantedAuthority&gt; auths = AuthorityUtils.commaSeparatedStringToAuthorityList(<span class=\"string\">&quot;admins&quot;</span>);</span><br></pre></td></tr></table></figure>\n<h2 id=\"hasAnyAuthority 方法\"><a href=\"#hasAnyAuthority 方法\" class=\"headerlink\" title=\"hasAnyAuthority 方法\"></a>hasAnyAuthority 方法</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.antMatchers(<span class=\"string\">&quot;/test/index&quot;</span>).hasAnyAuthority(<span class=\"string\">&quot;admins,mannager&quot;</span>)<span class=\"comment\">// 当前登录用户只有具有 admins, 或者 mannager 的都可以</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"hasRole 方法\"><a href=\"#hasRole 方法\" class=\"headerlink\" title=\"hasRole 方法\"></a>hasRole 方法</h2><blockquote>\n<p>但是在服务类里面添加角色权限的时候，必须要加一个 ROLE_前缀<br>hasanyRole 方法在配置类中多个角色用逗号隔开</p>\n</blockquote>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.antMatchers(<span class=\"string\">&quot;/test/index&quot;</span>).hasRole(<span class=\"string\">&quot;sale&quot;</span>) <span class=\"comment\">// 设置什么角色可以访问</span></span><br></pre></td></tr></table></figure>\n<blockquote>\n<hr>\n</blockquote>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">List&lt;GrantedAuthority&gt; auths = AuthorityUtils.commaSeparatedStringToAuthorityList(<span class=\"string\">&quot;admins,ROLE_sale&quot;</span>);</span><br></pre></td></tr></table></figure>\n<blockquote>\n<hr>\n</blockquote>\n<h1 id=\"基于注解配置 SpringSecurity\"><a href=\"# 基于注解配置 SpringSecurity\" class=\"headerlink\" title=\"基于注解配置 SpringSecurity\"></a>基于注解配置 SpringSecurity</h1><h2 id=\"设置权限\"><a href=\"# 设置权限\" class=\"headerlink\" title=\"设置权限\"></a>设置权限</h2><blockquote>\n<p>开启注解配置 Security 方式</p>\n</blockquote>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// prePostEnabled 是表示支持事后验证的方式</span></span><br><span class=\"line\"><span class=\"meta\">@EnableGlobalMethodSecurity(securedEnabled = true,prePostEnabled = true)</span></span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>接口类</p>\n</blockquote>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//@Secured(&#123;&quot;ROLE_sale&quot;,&quot;ROLE_mannager&quot;&#125;)</span></span><br><span class=\"line\"><span class=\"meta\">@PreAuthorize(&quot;hasAnyAuthority(&#x27;admins&#x27;)&quot;)</span></span><br><span class=\"line\"><span class=\"comment\">//@PostAuthorize(&quot;hasAnyAuthority(&#x27;admins&#x27;)&quot;) // 在方法执行之后再做权限验证</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> String <span class=\"title function_\">update</span><span class=\"params\">()</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">&quot;hello updata&quot;</span>;</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"过滤注解\"><a href=\"# 过滤注解\" class=\"headerlink\" title=\"过滤注解\"></a>过滤注解</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@PostFilter</span> <span class=\"comment\">// 方法对返回数据进行过滤</span></span><br><span class=\"line\"><span class=\"meta\">@PreFillter</span> <span class=\"comment\">// 对传入方法的数据进行过滤</span></span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>参数使用</p>\n</blockquote>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 表示只返回的数据对象中的 username 是 admin 的对象</span></span><br><span class=\"line\"><span class=\"meta\">@PostFilter(&quot;filterObject.username == &#x27;admin&#x27;&quot;)</span></span><br><span class=\"line\"><span class=\"comment\">// 表示只传入的数据对象中的 username 属性是 admin 的对象</span></span><br><span class=\"line\"><span class=\"meta\">@PreFilter(&quot;filterObject.username == &#x27;admin&#x27;&quot;)</span></span><br></pre></td></tr></table></figure>\n<h1 id=\"用户注销\"><a href=\"# 用户注销\" class=\"headerlink\" title=\"用户注销\"></a>用户注销</h1><blockquote>\n<p>href 的 /logout 是自带的，不需要自己去编写 <br> 登出后再去访问需要登录的方法的请求就会被拦截，自动跳到登陆页面去 <br> <figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;/logout&quot;</span>&gt;</span> 退出<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br></pre></td></tr></table></figure></p>\n</blockquote>\n<h1 id=\"一定时间内自动登录\"><a href=\"# 一定时间内自动登录\" class=\"headerlink\" title=\"一定时间内自动登录\"></a>一定时间内自动登录</h1>","url":"/posts/21484/","min2read":2,"word4post":602,"prev_post":{"title":"EL 表达式","url":"/posts/5361/"},"next_post":{"title":"boot_Security.md","url":"/posts/29525/"},"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" data-id=\"设置登录的用户名和密码\" href = \"#\"><span class=\"toc-number\">1.</span> <span class=\"toc-text\">设置登录的用户名和密码 </span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" data-id=\"通过配置文件\" href = \"#\"><span class=\"toc-number\">1.1.</span> <span class=\"toc-text\"> 通过配置文件</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" data-id=\"自定义编写实现类\" href = \"#\"><span class=\"toc-number\">1.2.</span> <span class=\"toc-text\">自定义编写实现类</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" data-id=\"基于角色或者权限进行访问控制\" href = \"#\"><span class=\"toc-number\">2.</span> <span class=\"toc-text\">基于角色或者权限进行访问控制</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" data-id=\"hasAuthority- 方法\" href = \"#\"><span class=\"toc-number\">2.1.</span> <span class=\"toc-text\">hasAuthority 方法</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" data-id=\"hasAnyAuthority 方法\" href = \"#\"><span class=\"toc-number\">2.2.</span> <span class=\"toc-text\">hasAnyAuthority 方法</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" data-id=\"hasRole 方法\" href = \"#\"><span class=\"toc-number\">2.3.</span> <span class=\"toc-text\">hasRole 方法</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" data-id=\"基于注解配置 SpringSecurity\" href = \"#\"><span class=\"toc-number\">3.</span> <span class=\"toc-text\">基于注解配置 SpringSecurity</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" data-id=\"设置权限\" href = \"#\"><span class=\"toc-number\">3.1.</span> <span class=\"toc-text\">设置权限</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" data-id=\"过滤注解\" href = \"#\"><span class=\"toc-number\">3.2.</span> <span class=\"toc-text\">过滤注解</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" data-id=\"用户注销\" href = \"#\"><span class=\"toc-number\">4.</span> <span class=\"toc-text\">用户注销</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" data-id=\"一定时间内自动登录\" href = \"#\"><span class=\"toc-number\">5.</span> <span class=\"toc-text\">一定时间内自动登录</span></a></li></ol>","categories":[{"name":"SpringSecurity","path":"api/categories/SpringSecurity.json","url":"/categories/SpringSecurity/"}],"tags":[]}