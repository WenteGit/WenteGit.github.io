{"title":"EL 表达式","slug":"EL表达式","date":"2022-08-12","updated":"2022-08-12","comments":true,"path":"api/posts/5361.json","excerpt":"<blockquote><p> 总结了关于 EL 表达式的相关知识 </p></blockquote>","cover":null,"covers":null,"content":"<blockquote>\n<p> 总结了关于 EL 表达式的相关知识 </p>\n</blockquote>\n<span id=\"more\"></span>\n<blockquote>\n<p>EL 表达式 </p>\n</blockquote>\n<h1 id=\"1- 概念：Expression-Language- 表达式语言\"><a href=\"#1- 概念：Expression-Language- 表达式语言\" class=\"headerlink\" title=\"1. 概念：Expression Language 表达式语言\"></a>1. 概念：Expression Language 表达式语言 </h1><h1 id=\"2- 作用：替换和简化 jsp 页面中 java 代码的编写\"><a href=\"#2- 作用：替换和简化 jsp 页面中 java 代码的编写\" class=\"headerlink\" title=\"2. 作用：替换和简化 jsp 页面中 java 代码的编写\"></a>2. 作用：替换和简化 jsp 页面中 java 代码的编写 </h1><h1 id=\"3- 语法：- 表达式\"><a href=\"#3- 语法：- 表达式\" class=\"headerlink\" title=\"3. 语法：${ 表达式}\"></a>3. 语法：${表达式}</h1><h1 id=\"4- 注意\"><a href=\"#4- 注意\" class=\"headerlink\" title=\"4. 注意:\"></a>4. 注意:</h1><blockquote>\n<p>   jsp 默认支持 el 表达式的。如果要忽略 el 表达式 </p>\n</blockquote>\n<h2 id=\"1- 设置 jsp 中 page 指令中：isELIgnored-”true”- 忽略当前 jsp 页面中所有的 el 表达式\"><a href=\"#1- 设置 jsp 中 page 指令中：isELIgnored-”true”- 忽略当前 jsp 页面中所有的 el 表达式\" class=\"headerlink\" title=\"1. 设置 jsp 中 page 指令中：isELIgnored=”true” 忽略当前 jsp 页面中所有的 el 表达式\"></a>1. 设置 jsp 中 page 指令中：isELIgnored=”true” 忽略当前 jsp 页面中所有的 el 表达式 </h2><h2 id=\"2- 表达式 -：忽略当前这个 el 表达式\"><a href=\"#2- 表达式 -：忽略当前这个 el 表达式\" class=\"headerlink\" title=\"2. ${ 表达式} ：忽略当前这个 el 表达式\"></a>2. ${表达式} ：忽略当前这个 el 表达式 </h2><h1 id=\"5- 使用：\"><a href=\"#5- 使用：\" class=\"headerlink\" title=\"5. 使用：\"></a>5. 使用：</h1><h2 id=\"1- 运算：\"><a href=\"#1- 运算：\" class=\"headerlink\" title=\"1. 运算：\"></a>1. 运算：</h2><pre><code>        * 运算符：\n            1. 算数运算符： + - * /(div) %(mod)\n            2. 比较运算符： &gt; &lt; &gt;= &lt;= == !=\n            3. 逻辑运算符： &amp;&amp;(and) ||(or) !(not)\n            4. 空运算符： empty\n                * 功能：用于判断字符串、集合、数组对象是否为 null 或者长度是否为 0\n                * $&#123;empty list&#125;: 判断字符串、集合、数组对象是否为 null 或者长度为 0\n                * $&#123;not empty str&#125;: 表示判断字符串、集合、数组对象是否不为 null 并且 长度 &gt;0\n</code></pre>\n<h2 id=\"2- 获取值\"><a href=\"#2- 获取值\" class=\"headerlink\" title=\"2. 获取值\"></a>2. 获取值 </h2><pre><code>        1. el 表达式只能从域对象中获取值\n        2. 语法：\n</code></pre>\n<h3 id=\"1- 域名称 - 键名 -：从指定域中获取指定键的值\"><a href=\"#1- 域名称 - 键名 -：从指定域中获取指定键的值\" class=\"headerlink\" title=\"1. ${ 域名称. 键名}：从指定域中获取指定键的值\"></a>1. ${域名称. 键名}：从指定域中获取指定键的值 </h3><pre><code>                * 域名称：\n                    1. pageScope        --&gt; pageContext\n                    2. requestScope     --&gt; request\n                    3. sessionScope     --&gt; session\n                    4. applicationScope --&gt; application（ServletContext）\n                * 举例：在 request 域中存储了 name= 张三\n                * 获取：$&#123;requestScope.name&#125;\n</code></pre>\n<h3 id=\"2- 键名 -：表示依次从最小的域中查找是否有该键对应的值，直到找到为止。\"><a href=\"#2- 键名 -：表示依次从最小的域中查找是否有该键对应的值，直到找到为止。\" class=\"headerlink\" title=\"2. ${ 键名}：表示依次从最小的域中查找是否有该键对应的值，直到找到为止。\"></a>2. ${键名}：表示依次从最小的域中查找是否有该键对应的值，直到找到为止。</h3><h2 id=\"3- 获取对象、List 集合、Map 集合的值\"><a href=\"#3- 获取对象、List 集合、Map 集合的值\" class=\"headerlink\" title=\"3. 获取对象、List 集合、Map 集合的值\"></a>3. 获取对象、List 集合、Map 集合的值 </h2><pre><code>                1. 对象：$&#123; 域名称. 键名. 属性名 &#125;\n                    * 本质上会去调用对象的 getter 方法\n\n                2. List 集合：$&#123; 域名称. 键名 [索引]&#125;\n\n                3. Map 集合：\n                    * $&#123; 域名称. 键名.key 名称 &#125;\n                    * $&#123; 域名称. 键名 [&quot;key 名称 &quot;]&#125;\n</code></pre>\n<h2 id=\"3- 隐式对象：\"><a href=\"#3- 隐式对象：\" class=\"headerlink\" title=\"3. 隐式对象：\"></a>3. 隐式对象：</h2><pre><code>        * el 表达式中有 11 个隐式对象\n        * pageContext：\n            * 获取 jsp 其他八个内置对象\n                * $&#123;pageContext.request.contextPath&#125;：动态获取虚拟目录\n</code></pre>\n","url":"/posts/5361/","min2read":1,"word4post":467,"prev_post":{"title":"JSTL 表达式","url":"/posts/9859/"},"next_post":{"title":"SpringSecurity-Web 权限","url":"/posts/21484/"},"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" data-id=\"1- 概念：Expression-Language- 表达式语言\" href = \"#\"><span class=\"toc-number\">1.</span> <span class=\"toc-text\">1. 概念：Expression Language 表达式语言 </span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" data-id=\"2- 作用：替换和简化 jsp 页面中 java 代码的编写\" href = \"#\"><span class=\"toc-number\">2.</span> <span class=\"toc-text\">2. 作用：替换和简化 jsp 页面中 java 代码的编写 </span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" data-id=\"3- 语法：- 表达式\" href = \"#\"><span class=\"toc-number\">3.</span> <span class=\"toc-text\">3. 语法：${表达式}</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" data-id=\"4- 注意\" href = \"#\"><span class=\"toc-number\">4.</span> <span class=\"toc-text\">4. 注意:</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" data-id=\"1- 设置 jsp 中 page 指令中：isELIgnored-”true”- 忽略当前 jsp 页面中所有的 el 表达式\" href = \"#\"><span class=\"toc-number\">4.1.</span> <span class=\"toc-text\">1. 设置 jsp 中 page 指令中：isELIgnored&#x3D;”true” 忽略当前 jsp 页面中所有的 el 表达式 </span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" data-id=\"2- 表达式 -：忽略当前这个 el 表达式\" href = \"#\"><span class=\"toc-number\">4.2.</span> <span class=\"toc-text\">2. ${表达式} ：忽略当前这个 el 表达式 </span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" data-id=\"5- 使用：\" href = \"#\"><span class=\"toc-number\">5.</span> <span class=\"toc-text\">5. 使用：</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" data-id=\"1- 运算：\" href = \"#\"><span class=\"toc-number\">5.1.</span> <span class=\"toc-text\">1. 运算：</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" data-id=\"2- 获取值\" href = \"#\"><span class=\"toc-number\">5.2.</span> <span class=\"toc-text\">2. 获取值 </span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" data-id=\"1- 域名称 - 键名 -：从指定域中获取指定键的值\" href = \"#\"><span class=\"toc-number\">5.2.1.</span> <span class=\"toc-text\">1. ${域名称. 键名}：从指定域中获取指定键的值 </span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" data-id=\"2- 键名 -：表示依次从最小的域中查找是否有该键对应的值，直到找到为止。\" href = \"#\"><span class=\"toc-number\">5.2.2.</span> <span class=\"toc-text\">2. ${键名}：表示依次从最小的域中查找是否有该键对应的值，直到找到为止。</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" data-id=\"3- 获取对象、List 集合、Map 集合的值\" href = \"#\"><span class=\"toc-number\">5.3.</span> <span class=\"toc-text\">3. 获取对象、List 集合、Map 集合的值 </span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" data-id=\"3- 隐式对象：\" href = \"#\"><span class=\"toc-number\">5.4.</span> <span class=\"toc-text\">3. 隐式对象：</span></a></li></ol></li></ol>","categories":[{"name":"java","path":"api/categories/java.json","url":"/categories/java/"}],"tags":[{"name":"EL表达式","path":"api/tags/EL表达式.json","url":"/tags/EL表达式/"}]}