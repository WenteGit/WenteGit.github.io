{"title":"S_Annotation","slug":"Annotation","date":"2022-07-20","updated":"2022-08-19","comments":true,"path":"api/posts/54839.json","excerpt":"<blockquote><p> 注解的使用 </p></blockquote>","cover":null,"covers":null,"content":"<blockquote>\n<p>注解的使用</p>\n</blockquote>\n<span id=\"more\"></span>\n\n<h1 id=\"常用注解的解释与使用\"><a href=\"# 常用注解的解释与使用\" class=\"headerlink\" title=\"常用注解的解释与使用\"></a>常用注解的解释与使用 </h1><h2 id=\"与 -SQL- 有关的注解\"><a href=\"# 与 -SQL- 有关的注解\" class=\"headerlink\" title=\"与 SQL 有关的注解\"></a> 与 SQL 有关的注解 </h2><h3 id=\"Param\"><a href=\"#Param\" class=\"headerlink\" title=\"@Param\"></a>@Param</h3><p> 首先明确这个注解是为 SQL 语句中参数赋值而服务的。    </p>\n<p> @Param 的作用就是给参数命名，比如在 mapper 里面某方法 A（int id）<br> 当添加注解后 A（@Param(“userId”) int id）<br> 也就是说外部想要取出传入的 id 值，只需要取它的参数名 userId 就可以了。<br> 将参数值传如 SQL 语句中，通过 #{userId}进行取值给 SQL 的参数赋值</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mapper:</span><br><span class=\"line\">public <span class=\"keyword\">User</span> selectUser(<span class=\"variable\">@Param</span>(&quot;userName&quot;) String name,<span class=\"variable\">@Param</span>(&quot;password&quot;) String pwd);</span><br><span class=\"line\"></span><br><span class=\"line\">xml:</span><br><span class=\"line\"><span class=\"operator\">&lt;</span><span class=\"keyword\">select</span> id<span class=\"operator\">=</span>&quot;selectUser&quot; resultMap<span class=\"operator\">=</span>&quot;User&quot;<span class=\"operator\">&gt;</span>  </span><br><span class=\"line\">   <span class=\"keyword\">select</span> <span class=\"operator\">*</span> <span class=\"keyword\">from</span> <span class=\"keyword\">user</span>  <span class=\"keyword\">where</span> user_name <span class=\"operator\">=</span> #&#123;userName&#125; <span class=\"keyword\">and</span> user_password<span class=\"operator\">=</span>#&#123;password&#125;  </span><br><span class=\"line\"><span class=\"operator\">&lt;</span><span class=\"operator\">/</span><span class=\"keyword\">select</span><span class=\"operator\">&gt;</span></span><br><span class=\"line\">可发现，userName 为映射名，相当于起的是个别名 </span><br><span class=\"line\"></span><br><span class=\"line\"> 注意点：  </span><br><span class=\"line\">·当使用了 <span class=\"variable\">@Param</span> 注解来声明参数的时候，<span class=\"keyword\">SQL</span>语句取值使用 #&#123;&#125;，$&#123;&#125; 取值都可以。</span><br><span class=\"line\">·当不使用 <span class=\"variable\">@Param</span> 注解声明参数的时候，必须使用的是 #&#123;&#125; 来取参数。使用 $&#123;&#125; 方式取值会报错。</span><br><span class=\"line\">·不使用 <span class=\"variable\">@Param</span>注解时，参数只能有一个，并且是 Javabean。在 <span class=\"keyword\">SQL</span> 语句里可以引用 JavaBean 的性，而且只能引用 JavaBean 的属性。</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">实际上：</span><br><span class=\"line\">即便是不使用这个注解，也可以直接通过 #&#123;&#125; 去访问 NewUser 的成员变量，也是可以的，但是也只能有一个参数，这个参数就只能是 NewUser 这个 JavaBean 对象</span><br><span class=\"line\">    <span class=\"operator\">&lt;</span><span class=\"keyword\">insert</span> id<span class=\"operator\">=</span>&quot;insertN&quot; parameterType<span class=\"operator\">=</span>&quot;xtzl.boot.bean.NewUser&quot;<span class=\"operator\">&gt;</span></span><br><span class=\"line\">        <span class=\"keyword\">insert</span> <span class=\"keyword\">into</span> <span class=\"keyword\">user</span> (username,password,sex,status) <span class=\"keyword\">values</span> (#&#123;username&#125;,#&#123;password&#125;,#&#123;sex&#125;,#&#123;status&#125;)</span><br><span class=\"line\">    <span class=\"operator\">&lt;</span><span class=\"operator\">/</span><span class=\"keyword\">insert</span><span class=\"operator\">&gt;</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h3 id=\"TableField\"><a href=\"#TableField\" class=\"headerlink\" title=\"TableField\"></a>TableField</h3><blockquote>\n<p>@TableField(exist = false) 注解加载 bean 属性上，表示当前属性不是数据库的字段，但在项目中必须使用，这样在新增等使用 bean 的时候，mybatis-plus 就会忽略这个，不会报错。</p>\n</blockquote>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">    <span class=\"comment\">// 插入</span></span><br><span class=\"line\">    <span class=\"meta\">@TableField(fill = FieldFill.INSERT)</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> LocalDateTime createTime;</span><br><span class=\"line\">    <span class=\"comment\">// 插入或更新的时候填充字段</span></span><br><span class=\"line\">    <span class=\"meta\">@TableField(fill = FieldFill.INSERT_UPDATE)</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> LocalDateTime updateTime;   </span><br><span class=\"line\"></span><br><span class=\"line\">DEFAULT ：默认不处理</span><br><span class=\"line\">INSERT ： 插入操作时进行填充字段</span><br><span class=\"line\">UPDATE ：更新操作时填充字段</span><br><span class=\"line\">INSERT_UPDATE ：插入和更新操作时填充字段</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h2 id=\"EnableWebSecurity\"><a href=\"#EnableWebSecurity\" class=\"headerlink\" title=\"@EnableWebSecurity\"></a>@EnableWebSecurity</h2><blockquote>\n<p><strong>EnableWebSecurity 注解有两个作用</strong></p>\n<ul>\n<li>1: 加载了 WebSecurityConfiguration 配置类, 配置安全认证策略。</li>\n<li>2: 加载了 AuthenticationConfiguration, 配置了认证信息。</li>\n</ul>\n</blockquote>\n","url":"/posts/54839/","min2read":2,"word4post":567,"prev_post":{"title":"JavaNorms","url":"/posts/17711/"},"next_post":{"title":"Maven_Write","url":"/posts/35182/"},"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" data-id=\"常用注解的解释与使用\" href = \"#\"><span class=\"toc-number\">1.</span> <span class=\"toc-text\">常用注解的解释与使用 </span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" data-id=\"与 -SQL- 有关的注解\" href = \"#\"><span class=\"toc-number\">1.1.</span> <span class=\"toc-text\"> 与 SQL 有关的注解 </span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" data-id=\"Param\" href = \"#\"><span class=\"toc-number\">1.1.1.</span> <span class=\"toc-text\">@Param</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" data-id=\"TableField\" href = \"#\"><span class=\"toc-number\">1.1.2.</span> <span class=\"toc-text\">TableField</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" data-id=\"EnableWebSecurity\" href = \"#\"><span class=\"toc-number\">1.2.</span> <span class=\"toc-text\">@EnableWebSecurity</span></a></li></ol></li></ol>","categories":[{"name":"Annotation","path":"api/categories/Annotation.json","url":"/categories/Annotation/"}],"tags":[{"name":"Annotation","path":"api/tags/Annotation.json","url":"/tags/Annotation/"}]}