{"title":"sql-mysql-advanced","slug":"sql-mysql-advanced","date":"2023-02-12","updated":"2023-02-12","comments":true,"path":"api/posts/55275.json","excerpt":"<blockquote><p> 介绍了关于 MySQL 中的高级特性 </p></blockquote>","cover":null,"covers":null,"content":"<blockquote>\n<p>介绍了关于 MySQL 中的高级特性</p>\n</blockquote>\n<span id=\"more\"></span>\n<h1 id=\"MVCC 的原理\"><a href=\"#MVCC 的原理\" class=\"headerlink\" title=\"MVCC 的原理\"></a>MVCC 的原理</h1><h2 id=\"MVCC 的介绍\"><a href=\"#MVCC 的介绍\" class=\"headerlink\" title=\"MVCC 的介绍\"></a>MVCC 的介绍</h2><blockquote>\n<p><strong>MVCC：</strong> 多版本并发控制机制 <br><strong> 作用：</strong></p>\n<ul>\n<li>可解决脏读、不可重复读的事务读写问题</li>\n<li>在保证隔离性的基础上，提升了读取效率和并发性</li>\n</ul>\n</blockquote>\n<h2 id=\"保证事务隔离性\"><a href=\"# 保证事务隔离性\" class=\"headerlink\" title=\"保证事务隔离性\"></a>保证事务隔离性</h2><p><strong>UndoLog 版本链</strong></p>\n<blockquote>\n<ul>\n<li>在执行 Update 和 Delete 操作的时候，会将每次操作记录记录在 UndoLog 中, 每条记录都有唯一的事务 ID</li>\n<li>最新的记录在链头，最老的记录在链尾  </li>\n</ul>\n</blockquote>\n<p><strong>Readview</strong></p>\n<blockquote>\n<p>记录了数据版本链的统计值: m_ids、min_trx_id、max_trx_id、creator_trx_id</p>\n<ul>\n<li>m_ids：活跃事务 ID 集合(未提交的事务)</li>\n<li>min_trx_id：最老活跃事务 ID</li>\n<li>max_trx_id：最新活跃事务 ID+1 (下一个将被分配的版本 ID)</li>\n<li>creator_trx_id：当前事务 ID</li>\n</ul>\n</blockquote>\n<p><strong>选择版本</strong>  </p>\n<blockquote>\n<p><strong>四步判断法 </strong><br> 在遍历版本链的过程中<br>1，判断当前版本事务 ID == 最新活跃事务，若是，则该版本符合要求, 若不是，则继续往下判断<br>2，判断当前版本事务 ID &lt; 最老活跃事务(在创建当前事务之前就已经提交了)，若是，则该版本符合要求，若不是，则继续往下判断<br>3，判断当前版本事务 ID &gt; max_trx_id（在创建当前事务之后才有的版本), 若是，则版本不符合要求<br>4, 判断当前版本事务 ID 是否在非活跃事务中，如果不在，则说明该版本事务是已提交的事务，符合要求  </p>\n<hr>\n<p><strong>解决问题 </strong><br> 在进行 undoLog 中遍历版本链选择版本的过程中，主要找到最新的已提交的版本，从而避免了脏读，而第一事务开始前创建，之后都只使用这唯一的一个 ReadView, 则单个事务去匹配到的版本就是一样的，也就解决了不可重复读的问题</p>\n</blockquote>\n","url":"/posts/55275/","min2read":1,"word4post":478,"prev_post":{"title":"Java 八股文","url":"/posts/17883/"},"next_post":{"title":"RabbitMQ","url":"/posts/15185/"},"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" data-id=\"MVCC 的原理\" href = \"#\"><span class=\"toc-number\">1.</span> <span class=\"toc-text\">MVCC 的原理</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" data-id=\"MVCC 的介绍\" href = \"#\"><span class=\"toc-number\">1.1.</span> <span class=\"toc-text\">MVCC 的介绍</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" data-id=\"保证事务隔离性\" href = \"#\"><span class=\"toc-number\">1.2.</span> <span class=\"toc-text\">保证事务隔离性</span></a></li></ol></li></ol>","categories":[{"name":"SQLS","path":"api/categories/SQLS.json","url":"/categories/SQLS/"}],"tags":[{"name":"mysql","path":"api/tags/mysql.json","url":"/tags/mysql/"}]}