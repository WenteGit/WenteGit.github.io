{"title":"JavaIO","slug":"JavaIO","date":"2022-11-15","updated":"2022-11-15","comments":true,"path":"api/posts/20622.json","excerpt":"<blockquote><p> 总结了关于 JavaIO 的知识点 </p></blockquote>","cover":null,"covers":null,"content":"<blockquote>\n<p> 总结了关于 JavaIO 的知识点 </p>\n</blockquote>\n<span id=\"more\"></span>\n\n<h1 id=\"Java-Input\"><a href=\"#Java-Input\" class=\"headerlink\" title=\"Java Input\"></a>Java Input</h1><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">String inputpath=<span class=\"string\">&quot;D:\\\\AAA\\\\txt\\\\code.txt&quot;</span>;</span><br><span class=\"line\"><span class=\"type\">File</span> <span class=\"variable\">file</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">File</span>(inputpath);</span><br><span class=\"line\"><span class=\"type\">FileReader</span> <span class=\"variable\">fileReader</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">FileReader</span>(file);</span><br><span class=\"line\"><span class=\"comment\">// 使用 BufferReader 读取 </span></span><br><span class=\"line\"><span class=\"type\">BufferedReader</span> <span class=\"variable\">bufferedReader</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">BufferedReader</span>(fileReader);</span><br><span class=\"line\"><span class=\"type\">String</span> <span class=\"variable\">line</span> <span class=\"operator\">=</span> <span class=\"literal\">null</span>;</span><br><span class=\"line\"><span class=\"comment\">// 按行读取 </span></span><br><span class=\"line\"><span class=\"keyword\">while</span> ((line = bufferedReader.readLine()) !=<span class=\"literal\">null</span>)&#123;</span><br><span class=\"line\">    System.out.println(line);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// 读取第一个字符，并且返回其 Ascall 码值 </span></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"variable\">read</span> <span class=\"operator\">=</span> bufferedReader.read(); </span><br></pre></td></tr></table></figure>\n\n<h1 id=\"Java-Output\"><a href=\"#Java-Output\" class=\"headerlink\" title=\"Java Output\"></a>Java Output</h1><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> <span class=\"keyword\">throws</span> IOException &#123;</span><br><span class=\"line\">    <span class=\"type\">String</span> <span class=\"variable\">hello</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;time23&quot;</span>;</span><br><span class=\"line\">    String outputStreamFilePath=<span class=\"string\">&quot;D:\\\\AAA\\\\txt\\\\demo.txt&quot;</span>;</span><br><span class=\"line\">    File file=<span class=\"keyword\">new</span> <span class=\"title class_\">File</span>(outputStreamFilePath);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"type\">FileWriter</span> <span class=\"variable\">fileWriter</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">FileWriter</span>(outputStreamFilePath, <span class=\"literal\">true</span>);</span><br><span class=\"line\">    fileWriter.write(hello);</span><br><span class=\"line\">    fileWriter.close();</span><br><span class=\"line\">    <span class=\"comment\">// 以 FileWriter 作为参数，不换行写入 </span></span><br><span class=\"line\">    <span class=\"type\">BufferedWriter</span> <span class=\"variable\">bufferedWriter</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">BufferedWriter</span>(fileWriter);</span><br><span class=\"line\">    bufferedWriter.write(hello);</span><br><span class=\"line\">    <span class=\"comment\">// 以 FilterWriter 为参数，换行与不换行写入 </span></span><br><span class=\"line\">    <span class=\"type\">PrintWriter</span> <span class=\"variable\">printWriter</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">PrintWriter</span>(fileWriter);</span><br><span class=\"line\">    printWriter.println(hello);</span><br><span class=\"line\">    printWriter.print(hello);</span><br><span class=\"line\">    printWriter.close();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h1 id=\"JavaIO 的集中输入输出流的比较\"><a href=\"#JavaIO 的集中输入输出流的比较\" class=\"headerlink\" title=\"JavaIO 的集中输入输出流的比较\"></a>JavaIO 的集中输入输出流的比较 </h1><blockquote>\n<ul>\n<li>FileReader 和 Filewriter 可以作为 Buffer 类的参数 </li>\n<li>BufferedReader 和 BufferedWriter 在内存中会自带一个 8kb 的字节缓冲区 </li>\n<li>Buffer 同样可以传入 File 类 </li>\n<li>PrintWriter 的 print、println 方法可以接受任意类型的参数，而 BufferedWriter 的 write 方法只能接受字符、字符数组和字符串 </li>\n<li>PrintWriter 不但能接收字符流，也能接收字节流。</li>\n</ul>\n</blockquote>\n","url":"/posts/20622/","min2read":1,"word4post":268,"prev_post":{"title":"importantFunctions","url":"/posts/30183/"},"next_post":{"title":"C-Process-API","url":"/posts/5/"},"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" data-id=\"Java-Input\" href = \"#\"><span class=\"toc-number\">1.</span> <span class=\"toc-text\">Java Input</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" data-id=\"Java-Output\" href = \"#\"><span class=\"toc-number\">2.</span> <span class=\"toc-text\">Java Output</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" data-id=\"JavaIO 的集中输入输出流的比较\" href = \"#\"><span class=\"toc-number\">3.</span> <span class=\"toc-text\">JavaIO 的集中输入输出流的比较 </span></a></li></ol>","categories":[{"name":"JavaStudy","path":"api/categories/JavaStudy.json","url":"/categories/JavaStudy/"}],"tags":[{"name":"IO","path":"api/tags/IO.json","url":"/tags/IO/"}]}